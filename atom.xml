<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>http://misakait.best</id>
    <title>命に嫌われている</title>
    <subtitle>chinitei</subtitle>
    <icon>http://misakait.best/assets/favicon.ico</icon>
    <link href="http://misakait.best" />
    <author>
      <name>misakait</name>
    </author>
    <updated>2024-06-24T06:33:49.384Z</updated>
    <entry>
        <id>http://misakait.best/2024/06/24/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8lux%E4%B8%8B%E8%BD%BDB%E7%AB%99%E8%A7%86%E9%A2%91/</id>
        <title>如何使用lux下载B站视频</title>
        <link rel="alternate" href="http://misakait.best/2024/06/24/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8lux%E4%B8%8B%E8%BD%BDB%E7%AB%99%E8%A7%86%E9%A2%91/"/>
        <content type="html">&lt;h1 id=&#34;如何使用lux下载B站视频&#34;&gt;&lt;a href=&#34;#如何使用lux下载B站视频&#34; class=&#34;headerlink&#34; title=&#34;如何使用lux下载B站视频&#34;&gt;&lt;/a&gt;如何使用lux下载B站视频&lt;/h1&gt;&lt;h2 id=&#34;前言&#34;&gt;&lt;a href=&#34;#前言&#34; class=&#34;headerlink&#34; title=&#34;前言&#34;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;鉴于现在bilibili视频下载越来越难，要么要下载一个巨大杂七杂八的软件，要么就是收费，至于小而美的插件脚本都很难寻找，于是我在此推广一个开源项目lux，并介绍如何用它来实现哔哩哔哩视频的下载&lt;/p&gt;
&lt;p&gt;&lt;code&gt;more&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&#34;1-下载lux和FFmpeg&#34;&gt;&lt;a href=&#34;#1-下载lux和FFmpeg&#34; class=&#34;headerlink&#34; title=&#34;1. 下载lux和FFmpeg&#34;&gt;&lt;/a&gt;1. 下载lux和FFmpeg&lt;/h2&gt;&lt;p&gt;访问此处&lt;a href=&#34;https://github.com/iawia002/lux/releases/tag/v0.24.1&#34;&gt;Release v0.24.1 · iawia002&amp;#x2F;lux (github.com)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;选择适合你操作系统的版本，一般我们用的是windows系统，选择红框内的下载&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; data-src=&#34;https://pic.imgdb.cn/item/667980aed9c307b7e99c445a.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;解压出来后放在一个单独目录。&lt;/p&gt;
&lt;p&gt;接着访问&lt;a href=&#34;https://www.gyan.dev/ffmpeg/builds/&#34;&gt;Builds - CODEX FFMPEG @ gyan.dev&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; data-src=&#34;https://pic.imgdb.cn/item/667980ced9c307b7e99cad18.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;下载红框内文件，解压时发现里面有三文件夹，只需解压bin内的文件即可。&lt;/p&gt;
&lt;p&gt;解压完后将bin内的三个文件移动到你上文下载的lux同个目录下。&lt;/p&gt;
&lt;p&gt;接着再在该目录写新建一个txt文件，命名为 &lt;code&gt;cookie.txt&lt;/code&gt;备用&lt;/p&gt;
&lt;p&gt;此时你应该有一个文件夹如下&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; data-src=&#34;https://pic.imgdb.cn/item/667980e9d9c307b7e99d0c6c.jpg&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;2-获取cookie&#34;&gt;&lt;a href=&#34;#2-获取cookie&#34; class=&#34;headerlink&#34; title=&#34;2.获取cookie&#34;&gt;&lt;/a&gt;2.获取cookie&lt;/h2&gt;&lt;p&gt;进入哔哩哔哩首页，按下F12唤出控制台，选择&lt;strong&gt;网络&lt;/strong&gt;或者&lt;strong&gt;network&lt;/strong&gt;，然后选中&lt;strong&gt;全部&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; data-src=&#34;https://pic.imgdb.cn/item/66798104d9c307b7e99d55ff.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;此时按下F5刷新网页&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; data-src=&#34;https://pic.imgdb.cn/item/66798117d9c307b7e99d9489.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;等待一会儿，加载完全后不出意料排在第一位的是形如红圈内的玩意 （spm_id_from&amp;#x3D;333.976.0.0），如果不是拉下去寻找该玩意，如若找不到，多刷新几次。&lt;/p&gt;
&lt;p&gt;然后将光标移到右边往下拉，&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; data-src=&#34;https://pic.imgdb.cn/item/6679812cd9c307b7e99ddaad.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;不出意外你会看到一大段cookie，将cookie所包含的内容全部复制下来，不要遗漏，也不要多。（后面如果出无法登录什么的问题应该就是这里出错了）并将这些内容即你的cookie复制到前文让你新建的那个 &lt;code&gt;[cookie.txt](#jump)&lt;/code&gt;的文件里。&lt;/p&gt;
&lt;h2 id=&#34;3-下载视频&#34;&gt;&lt;a href=&#34;#3-下载视频&#34; class=&#34;headerlink&#34; title=&#34;3.下载视频&#34;&gt;&lt;/a&gt;3.下载视频&lt;/h2&gt;&lt;p&gt;在你lux的目录唤出cmd&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; data-src=&#34;https://pic.imgdb.cn/item/66798162d9c307b7e99e9448.jpg&#34;&gt;清空红框内容并输入 &lt;code&gt;cmd&lt;/code&gt;回车&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; data-src=&#34;https://pic.imgdb.cn/item/66797457d9c307b7e976cb6a.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;然后就可以开始使用lux了&lt;/p&gt;
&lt;p&gt;比如说想下载红框内视频&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; data-src=&#34;https://pic.imgdb.cn/item/6679759bd9c307b7e97a5242.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;点进去&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; data-src=&#34;https://pic.imgdb.cn/item/667976cad9c307b7e97d99b5.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;复制红框内容&lt;/p&gt;
&lt;p&gt;返回cmd&lt;/p&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;知识点1&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;lux -i 视频网址&lt;/code&gt; 这个命令可以查看关于此视频的下载信息&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;输入&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;lux -c cookie.txt -i https://www.bilibili.com/video/BV1Cw4m1e7L2/?spm_id_from=333.1007.tianma.1-1-1.click
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; data-src=&#34;https://pic.imgdb.cn/item/66797861d9c307b7e98224e9.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;你可以看到任何该视频你可以下载的清晰度&lt;/p&gt;
&lt;p&gt;可能你会看到每个清晰度有两种编码方式，avc1和hev1，如何选择看个人需求，我推荐avc1&lt;/p&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;知识点二&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&#34;cmd&#34;&gt;lux -c cookie.txt
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;这里的-c cooki.txt很重要，没有它，你只能下载至多480p的视频&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;在这里，假如我们要下载高清1080p avc1的，那我们按红框里的来&lt;/p&gt;
&lt;p&gt;cmd内输入&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;lux -c cookie.txt -f 80-7 https://www.bilibili.com/video/BV1Cw4m1e7L2/?spm_id_from=333.1007.tianma.1-1-1.click
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;然后就下完了&lt;/p&gt;
&lt;p&gt;或者你想下载480p hev1的&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;lux -c cookie.txt -f 32-12 https://www.bilibili.com/video/BV1Cw4m1e7L2/?spm_id_from=333.1007.tianma.1-1-1.click
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;注意 &lt;mark&gt;-f&lt;/mark&gt; 后面的值&lt;/p&gt;
&lt;p&gt;下载完成后的视频在lux同目录下。&lt;/p&gt;
&lt;p&gt;你可能想问如果我想下载一个合集的内容怎么办，我的回答是自己去看[文档](&lt;a href=&#34;https://github.com/iawia002/lux&#34;&gt;iawia002&amp;#x2F;lux: 👾 Fast and simple video download library and CLI tool written in Go (github.com)&lt;/a&gt;)。其实是我现在没空写，以后会补上的。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; data-src=&#34;https://pic.imgdb.cn/item/66797ee7d9c307b7e9966a78.png&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;后记&#34;&gt;&lt;a href=&#34;#后记&#34; class=&#34;headerlink&#34; title=&#34;后记&#34;&gt;&lt;/a&gt;后记&lt;/h2&gt;&lt;p&gt;lux的功能远不及此，它还可以下载更多网站的视频以及拥有更多强大的功能，但只有你多看文档才能够学到。&lt;/p&gt;
&lt;p&gt;最后呢我展望一下未来，我知道lux的命令行模式很容易劝退小白，所以我决定在暑假期间争取学习java以便在开学前制作出lux的图形用户界面，项目名称我已经想好了，就叫lux-GUI。拭目以待吧！&lt;/p&gt;
</content>
        <updated>2024-06-24T06:33:49.384Z</updated>
    </entry>
    <entry>
        <id>http://misakait.best/2023/06/24/%E5%85%B3%E4%BA%8EHexo%E7%9A%84%E5%9B%BE%E7%89%87%E6%8F%92%E5%85%A5%E9%97%AE%E9%A2%98/</id>
        <title>关于Hexo的图片插入问题</title>
        <link rel="alternate" href="http://misakait.best/2023/06/24/%E5%85%B3%E4%BA%8EHexo%E7%9A%84%E5%9B%BE%E7%89%87%E6%8F%92%E5%85%A5%E9%97%AE%E9%A2%98/"/>
        <content type="html">&lt;h1 id=&#34;本地图片引用了却无法显示&#34;&gt;&lt;a href=&#34;#本地图片引用了却无法显示&#34; class=&#34;headerlink&#34; title=&#34;本地图片引用了却无法显示&#34;&gt;&lt;/a&gt;本地图片引用了却无法显示&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;插入图片的两种方法：&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;引用图床&lt;/li&gt;
&lt;li&gt;引用本地图片。为了防止路径出错，建议使用图床。&lt;/li&gt;
&lt;/ol&gt;
&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;

&lt;h2 id=&#34;1-图床&#34;&gt;&lt;a href=&#34;#1-图床&#34; class=&#34;headerlink&#34; title=&#34;1.图床&#34;&gt;&lt;/a&gt;1.图床&lt;/h2&gt;&lt;p&gt;推荐使用：&lt;a href=&#34;https://www.superbed.cn/&#34;&gt;聚合图床&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;2-本地图片&#34;&gt;&lt;a href=&#34;#2-本地图片&#34; class=&#34;headerlink&#34; title=&#34;2.本地图片&#34;&gt;&lt;/a&gt;2.本地图片&lt;/h2&gt;&lt;p&gt;参照 &lt;a href=&#34;https://hexo.io/zh-cn/docs/asset-folders&#34;&gt;Hexo 文档&lt;/a&gt;，然后用这种方式引用图片：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;#123;% asset_img image.jpg [title] %&amp;#125;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;如果还是无法显示，请尝试在文章里用 html 的 img 标签来引用本地图片。&lt;/p&gt;
</content>
        <category term="technology" scheme="http://misakait.best/categories/technology/" />
        <category term="hexo" scheme="http://misakait.best/tags/hexo/" />
        <updated>2023-06-24T03:40:27.000Z</updated>
    </entry>
    <entry>
        <id>http://misakait.best/2023/06/23/Hexo%E7%9A%84%E7%BE%8E%E5%8C%96%E5%92%8C%E4%BC%98%E5%8C%96--Ayer%E4%B8%BB%E9%A2%98%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8ESEO%E4%BC%98%E5%8C%96/</id>
        <title>Hexo的美化和优化--Ayer主题的安装与SEO优化</title>
        <link rel="alternate" href="http://misakait.best/2023/06/23/Hexo%E7%9A%84%E7%BE%8E%E5%8C%96%E5%92%8C%E4%BC%98%E5%8C%96--Ayer%E4%B8%BB%E9%A2%98%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8ESEO%E4%BC%98%E5%8C%96/"/>
        <content type="html">&lt;h1 id=&#34;前言&#34;&gt;&lt;a href=&#34;#前言&#34; class=&#34;headerlink&#34; title=&#34;前言&#34;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;正想要写这篇博客时。打开朋友圈一看，又是狗粮又是现充在这端午三天横行。反观自己，这三天就全坐在电脑旁折腾树莓派和博客了。不说了题外话了，回归正题。本篇博文力图包含Ayer主题的安装，live2d看板娘的安装，SEO的优化。&lt;/p&gt;
&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;

&lt;h1 id=&#34;部署Ayer主题&#34;&gt;&lt;a href=&#34;#部署Ayer主题&#34; class=&#34;headerlink&#34; title=&#34;部署Ayer主题&#34;&gt;&lt;/a&gt;部署Ayer主题&lt;/h1&gt;&lt;h2 id=&#34;1-安装&#34;&gt;&lt;a href=&#34;#1-安装&#34; class=&#34;headerlink&#34; title=&#34;1.安装&#34;&gt;&lt;/a&gt;1.安装&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;方法一( 推荐）：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在你的博客（Hexo）目录下执行以下命令：&lt;/p&gt;
&lt;p&gt;如若没有安装cnpm则以下所有cnpm命令全部改为npm即可，或者参考我的这篇博文&lt;a href=&#34;https://misakait.online/20230623/%E8%AE%B0%E6%A0%91%E8%8E%93%E6%B4%BE%E4%B8%8AHexo%E7%9A%84%E6%90%AD%E5%BB%BA/&#34;&gt;记树莓派上Hexo的搭建 | Misakait’s Blog&lt;/a&gt; 来安装cnpm。&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;bash&#34;&gt;cnpm i hexo-theme-ayer -S
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;如果是新安装本主题，安装完成后会在根目录生成一个&lt;code&gt;_config.ayer.yml&lt;/code&gt;文件，如若没有新建一个&lt;code&gt;_config.ayer.yml文件。直接编辑&lt;/code&gt;_conig.ayer.yml&amp;#96;文件进行配置即可。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;方法二（hexo &amp;lt; 5.0）：&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;bash&#34;&gt;# 国内用户如果速度较慢，可以把github地址替换为：https://gitee.com/mirrors/ayer.git
git clone https://github.com/Shen-Yu/hexo-theme-ayer.git themes/ayer
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;2-配置&#34;&gt;&lt;a href=&#34;#2-配置&#34; class=&#34;headerlink&#34; title=&#34;2.配置&#34;&gt;&lt;/a&gt;2.配置&lt;/h2&gt;&lt;p&gt;将博客根目录下的 &lt;code&gt;_config.yml&lt;/code&gt; 里的 &lt;code&gt;theme&lt;/code&gt; 值修改成 &lt;code&gt;ayer&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;theme: ayer
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;进入_config.ayer.yml文件配置，如果你一开始没有改文件，而是自己新建的，将下文复制过去。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# 侧边栏菜单
menu:
  主页: /
  归档: /archives
  分类: /categories
  标签: /tags
  关于我: /about

# 站点次标题和打字动效
# https://github.com/mattboldt/typed.js
subtitle:
  enable: true # 是否开启动效
  text: 唯我超电磁炮永存 # 显示的文字
  text2: 樱花落下的速度是没秒五厘米 # 滚动播放，如果不需要可以留空
  text3: 在此宣誓对你的爱 # 最多支持三段文字
  startDelay: 0 # 延迟时间
  typeSpeed: 200 # 打字速度
  loop: true # 是否循环
  backSpeed: 100 # 回退速度
  showCursor: true # 是否显示光标

# 网站图标和侧边栏logo
favicon: /favicon.ico
logo: /images/ayer-side.svg

# 封面配置
# enable-是否启用封面；path-封面背景图；logo-封面logo
cover:
  enable: true
  path: /images/cover1.jpg # /source/images目录下附送多张精美壁纸，可任意更换
  logo: /images/ayer.svg # 如果不要直接设置成false

# 页面顶部进度条
progressBar: true

# 告示板模块
broadcast:
  enable: true # true开启，false关闭
  type: 2 # 1：自定义输入，2：一言api(https://hitokoto.cn/)
  text: 一个安静优雅的hexo主题，快速且响应式。 # type为1时有效

# 文章配置
# 文章太长，截断按钮文字(在需要截断的行增加此标记：&amp;lt;!--more--&amp;gt;)
excerpt_link: 阅读更多...
# 如果你嫌每篇文章手动加more标记比较麻烦，又不想在首页全文显示，可以把excerpt_all设置成true，这样首页只会显示文章归档
excerpt_all: false

# 是否开启代码复制按钮
copy_btn: true
# 是否开启文章分享按钮
share_enable: true
# 国内的社交平台(If you are not in China, maybe you prefer to set:false)
share_china: true
# 文章分享文字
share_text: 分享

# 分页文字
nav_text:
  page_prev: 上一页
  page_next: 下一页
  post_prev: 上一篇
  post_next: 下一篇

# 文章页是否显示目录
toc: true

# 文章中的图片是否支持点击放大
image_viewer: true

# https://github.com/willin/hexo-wordcount
# 是否开启字数统计(关闭请设置enable为false)
# 也可以单独在md文件里Front-matter设置`no_word_count: true`属性，来自定义关闭字数统计
word_count:
  enable: true
  # 只在文章详情显示(不在首页显示)
  only_article_visit: true

# 打赏
# 打赏type设定：0-关闭打赏； 1-文章对应的md文件里有reward:true属性，才有打赏； 2-默认开启所有文章均有打赏，如果有些文章你不需要，请在文章对应的md文件里设置no_reward:true
reward_type: 0
# 打赏wording
#reward_wording: &amp;quot;请我喝杯咖啡吧~&amp;quot;
# 支付宝二维码图片地址，跟你设置logo的方式一样。比如：/images/alipay.jpg
#alipay: /images/alipay.jpg
# 微信二维码图片地址
#weixin: /images/wechat.jpg

# 版权声明
# 版权声明type设定：0-关闭版权声明； 1-文章对应的md文件里有copyright: true属性，才有版权声明； 2-所有文章均有版权声明
copyright_type: 2

# 是否启用搜索
search: true

# RSS订阅(先安装hexo-generator-feed插件，再去博客根目录config进行配置)
# 不想显示可以直接留空
rss: /atom.xml

# 是否启用黑夜模式开关
darkmode: true

# 动态背景效果: 0-关闭，1-动态线条(跟随鼠标)
canvas_bg: 1

# 自定义鼠标样式，直接替换/images/mouse.cur文件
mouse:
  enable: false
  path: /images/mouse.cur

# 鼠标点击效果：0-关闭，1-爱心，2-爆炸烟花，3-粒子烟花
click_effect: 1

# 页面宽度自定义（不建议修改，可能造成布局混乱），article_width文章宽度，sidebar_width侧边栏宽度
layout:
  article_width: 80rem
  sidebar_width: 8rem

# GitHub Ribbons-封面右上角的forkme，换样式直接在source/images目录下替换forkme图片
github:
  # (关闭请设置为false)
  enable: false
  url: https://github.com/Shen-Yu/hexo-theme-ayer

# 网易云音乐插件
music:
  enable: false
  # 播放器尺寸类型(1：小尺寸、2：大尺寸)
  type: 1
  id: 496869422 # 网易云分享的音乐ID(更换音乐请更改此配置项)
  autoPlay: true # 是否开启自动播放

# 访问量统计(不蒜子)
busuanzi:
  enable: true

# 友盟cnzz统计(url填js代码src链接)
cnzz:
  enable: true
  url: #

# Google Analytics
google_analytics: &amp;quot;&amp;quot;
# 百度统计
baidu_analytics: &amp;quot;&amp;quot;

# Mathjax数学公式
mathjax: true

# Katex数学公式(allpost设置为false时只有头部设置math:true的文章才开启)
# 需要更换hexo渲染器，npm un hexo-renderer-marked -S &amp;amp;&amp;amp; npm i hexo-renderer-markdown-it-katex -S
katex:
  enable: false # true
  allpost: true
  copy_tex: false

# mermaid流程图 三个选项缺一不可(https://mermaid-js.github.io/mermaid/#/)
mermaid:
  enable: false
  cdn: https://cdn.jsdelivr.net/npm/mermaid@8.9.2/dist/mermaid.min.js
  theme: forest

# 网站成立年份(默认为 2023，若填入年份小于当前年份，则显示为 2018-2023 类似的格式)
since: 2023

# ICP备案信息尾部显示
icp:
  enable: false
  url: &amp;quot;http://www.beian.miit.gov.cn/&amp;quot; # 备案链接
  text: &amp;quot;浙ICP备88888888&amp;quot; # 备案信息
# 公安备案信息尾部显示
gongan:
  enable: true
  img: /images/beian.png #公安备案图片
  url: &amp;quot;http://www.beian.gov.cn/portal/registerSystemInfo?recordcode=01234567890123&amp;quot; #公安备案链接
  text: &amp;quot;浙公网安备01234567890123号&amp;quot; #公安备案信息

# 友情链接
friends_link:
  Ayer主题: #网站名称
    #网站地址
    url: https://github.com/Shen-Yu/hexo-theme-ayer
    #网站图片(可忽略不写)
    img: /images/ayer.png
  GitHub:
    url: https://github.com/Shen-Yu
    img: https://i.loli.net/2020/09/07/indb4PRYDA98EkN.png
  码云:
    url: https://gitee.com/shen-yu
    img: https://i.loli.net/2020/09/07/K3AqO7h6krQFlRX.png
  Hexo官网:
    url: https://hexo.io
    img: https://i.loli.net/2020/09/07/UYGzjo7h68CRWny.png
  Hexo图表插件:
    url: https://github.com/Shen-Yu/hexo-tag-chart
    img: https://i.loli.net/2020/09/07/GIXBYE5SoylhR1r.png

# 评论：1、Valine(推荐)；2、Gitalk；3、Twikoo; 4.MiniValine

# 1、Valine[一款快速、简洁且高效的无后端评论系统](https://github.com/xCss/Valine)
# 启用Valine必须先创建leancloud应用， 获取 id|key 填入即可
leancloud:
  enable: true
  app_id: #
  app_key: #
# Valine配置
valine:
  enable: true # 是否启用
  avatar: monsterid # 头像样式(https://valine.js.org/avatar.html)
  placeholder: 给我的文章加点评论吧~ # placeholder

# 2、Gitalk(https://github.com/gitalk/gitalk)
gitalk:
  enable: false # true
  clientID: # GitHub Application Client ID
  clientSecret: # Client Secret
  repo: # Repository name
  owner: # GitHub ID
  admin: # GitHub ID

# 3、Twikoo(https://github.com/imaegoo/twikoo)
twikoo:
  enable: false
  envId: #

# 4、MiniValine
# See: https://github.com/MiniValine/MiniValine
minivaline:
  enable: false
  serverURL: https://minivaline.your-domain.com

# 首页广告配置
# 可以根据需要自行增加ad_3，ad_4...，留空则不显示
ads:
# ad_1:
#    title: vultr优惠vps
#    img: https://cdn.jsdelivr.net/gh/Shen-Yu/cdn/img/vultr.png
#    url: https://www.vultr.com/?ref=8630075
#    width: 


# 网站开启加密访问，密码可设置任何字符
lock:
  enable: false
  password: 123456
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;3-关于插件&#34;&gt;&lt;a href=&#34;#3-关于插件&#34; class=&#34;headerlink&#34; title=&#34;3.关于插件&#34;&gt;&lt;/a&gt;3.关于插件&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/theme-next/hexo-generator-searchdb&#34;&gt;hexo-generator-searchdb&lt;/a&gt; 用于搜索（必需）&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&#34;bash&#34;&gt;sudo cnpm install hexo-generator-searchdb --save
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;然后将以下配置复制到你博客根目录下的 &lt;code&gt;_config.yml&lt;/code&gt; 里（注意不是 ayer 目录下的）:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;search:
 path: search.xml
 field: post
 format: html
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/hexojs/hexo-generator-feed&#34;&gt;hexo-generator-feed&lt;/a&gt; 用于生成 RSS 订阅（必需）&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&#34;bash&#34;&gt;sudo cnpm install hexo-generator-feed --save
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;然后同样将以下配置复制到你博客根目录下的 &lt;code&gt;_config.yml&lt;/code&gt; 里（注意不是 ayer 目录下的）:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;text&#34;&gt;feed:
  type: atom
  path: atom.xml
  limit: 20
  hub:
  content:
  content_limit: 140
  content_limit_delim: &amp;quot; &amp;quot;
  order_by: -date
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/EYHN/hexo-helper-live2d/blob/master/README.zh-CN.md&#34;&gt;hexo-helper-live2d&lt;/a&gt; 看板娘（可选）&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&#34;bash&#34;&gt;sudo cnpm install --save hexo-helper-live2d
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;下载模型&lt;/p&gt;
&lt;p&gt;有以下这些模型。&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;css&#34;&gt;live2d-widget-model-chitose
live2d-widget-model-epsilon2_1
live2d-widget-model-gf
live2d-widget-model-haru/01 (use npm install --save live2d-widget-model-haru)
live2d-widget-model-haru/02 (use npm install --save live2d-widget-model-haru)
live2d-widget-model-haruto
live2d-widget-model-hibiki
live2d-widget-model-hijiki
live2d-widget-model-izumi
live2d-widget-model-koharu
live2d-widget-model-miku
live2d-widget-model-ni-j
live2d-widget-model-nico
live2d-widget-model-nietzsche
live2d-widget-model-nipsilon
live2d-widget-model-nito
live2d-widget-model-shizuku
live2d-widget-model-tororo
live2d-widget-model-tsumiki
live2d-widget-model-unitychan
live2d-widget-model-wanko
live2d-widget-model-z16
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;选择好对应的模型，使用 &lt;code&gt;cnpm install 模型的包名&lt;/code&gt; 来安装，比如我选择的的是&amp;#96;live2d-widget-model-miku 模型包.&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; data-src=&#34;https://pic.imgdb.cn/item/649660611ddac507cc054590.webp&#34;&gt;&lt;/p&gt;
&lt;p&gt;在hexo博客根目录选择&lt;code&gt;cmd&lt;/code&gt;命令窗口或者&lt;code&gt;git bash&lt;/code&gt; 输入以下代码:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;bash&#34;&gt;#仅为示例，将live2d-widget-model-miku改为你想要的模型包名。
sudo cnpm install live2d-widget-model-miku
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;打开个人Hexo博客文件根目录下的 &lt;code&gt;_config.yml&lt;/code&gt; 文件，在最后添加一下代码，示例:&lt;/p&gt;
&lt;p&gt;其他你配置你照抄即可，注意 model 中的 use 要改成你所安装的模型包名&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# live2d
# https://github.com/EYHN/hexo-helper-live2d
live2d:
  enable: true # 是否启用看板娘
  scriptFrom: local # 默认
  pluginRootPath: live2dw/ # 插件在站点上的根目录(相对路径)，自动生成
  pluginJsPath: lib/ # 脚本文件相对与插件根目录路径
  pluginModelPath: assets/ # 模型文件相对与插件根目录路径
  # scriptFrom: jsdelivr    # jsdelivr CDN
  # scriptFrom: unpkg    # unpkg CDN
  # scriptFrom: https://cdn.jsdelivr.net/npm/live2d-widget@3.x/lib/L2Dwidget.min.js    # 你的自定义 url
  tagMode: false # 标签模式, 是否仅替换 live2d tag标签而非插入到所有页面中，具体见项目github描述
  debug: false # 调试, 是否在控制台输出日志
  model:
    use: live2d-widget-model-miku # live2d模型的名字，要改的地方
    scale: 1
    hHeadPos: 0.5
    vHeadPos: 0.618
  display:
    superSample: 2
    width: 200
    height: 400
    position: right # 左侧还是右侧
    hOffset: 20
    vOffset: 0 # 距底部距离
  mobile:
    show: false # 手机端是否可见
    scale: 0.5
  react:
    opacityDefault: 0.7
    opacityOnHover: 0.2
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;配置页面&#34;&gt;&lt;a href=&#34;#配置页面&#34; class=&#34;headerlink&#34; title=&#34;配置页面&#34;&gt;&lt;/a&gt;配置页面&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;分类&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;sudo hexo new page categories
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;然后将以下复制到 &amp;#x2F;source&amp;#x2F;categories&amp;#x2F;index.md 文件&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;---
title: categories
type: &amp;quot;categories&amp;quot;
layout: &amp;quot;categories&amp;quot;
---
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;标签&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&#34;bash&#34;&gt;sudo hexo new page tags
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;然后将以下复制到 &amp;#x2F;source&amp;#x2F;categories&amp;#x2F;index.md 文件&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;---
title: tags
type: &amp;quot;tags&amp;quot;
layout: &amp;quot;tags&amp;quot;
---
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;友情链接&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;sudo hexo new page friends
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;然后将以下复制到 &amp;#x2F;source&amp;#x2F;friends&amp;#x2F;index.md 文件&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;---
title: friends
type: friends
layout: &amp;quot;friends&amp;quot;
---
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;然后在根目录下的 &lt;code&gt;_config.ayer.yml&lt;/code&gt; 中自定义 &lt;code&gt;friends_link&lt;/code&gt; 配置项即可&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;相册&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;sudo exo new page photos
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;然后将以下复制到 &amp;#x2F;source&amp;#x2F;photos&amp;#x2F;index.md 文件，&lt;code&gt;img_url&lt;/code&gt; 替换成图片路径，&lt;code&gt;caption&lt;/code&gt; 替换成图片名称&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;---
title: Gallery

albums: [[&amp;quot;img_url&amp;quot;, &amp;quot;img_caption&amp;quot;], [&amp;quot;img_url&amp;quot;, &amp;quot;img_caption&amp;quot;]]
---
&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id=&#34;SEO优化&#34;&gt;&lt;a href=&#34;#SEO优化&#34; class=&#34;headerlink&#34; title=&#34;SEO优化&#34;&gt;&lt;/a&gt;SEO优化&lt;/h1&gt;&lt;p&gt;我们辛辛苦苦写了博客是为了什么，但不管是为了什么，都有一个让更多人看见的过程。（那些写完就自己一个人看的除外）所以我们需要seo优化，让各大搜索引擎收录我们的网站。&lt;/p&gt;
&lt;h3 id=&#34;1-生成-sitemap-文件&#34;&gt;&lt;a href=&#34;#1-生成-sitemap-文件&#34; class=&#34;headerlink&#34; title=&#34;1. 生成 sitemap 文件&#34;&gt;&lt;/a&gt;1. 生成 sitemap 文件&lt;/h3&gt;&lt;p&gt;需要先安装 hexo 插件：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;     sudo cnpm install hexo-generator-baidu-sitemap --save
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;打开配置文件博客根目录下的&lt;code&gt;_config.yml&lt;/code&gt;添加&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;baidusitemap:
    path: baidusitemap.xml
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;再重启 hexo&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo hexo clean &amp;amp;&amp;amp; sudo hexo g &amp;amp;&amp;amp; sudo hexo d
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;2-网站推送至百度&#34;&gt;&lt;a href=&#34;#2-网站推送至百度&#34; class=&#34;headerlink&#34; title=&#34;2.网站推送至百度&#34;&gt;&lt;/a&gt;2.网站推送至百度&lt;/h3&gt;&lt;p&gt;百度 → &lt;a href=&#34;https://ziyuan.baidu.com/site/siteadd?siteurl=&#34;&gt;添加个人网站&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;使用添加文件的方式&lt;/p&gt;
&lt;p&gt;输入你的网址&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; data-src=&#34;https://pic.imgdb.cn/item/64966b321ddac507cc16c7f3.webp&#34;&gt;&lt;/p&gt;
&lt;p&gt;按你的情况选&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; data-src=&#34;https://pic.imgdb.cn/item/64966b481ddac507cc16ecba.webp&#34;&gt;&lt;/p&gt;
&lt;p&gt;选择文件验证&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; data-src=&#34;https://pic.imgdb.cn/item/64966b571ddac507cc170728.webp&#34;&gt;&lt;/p&gt;
&lt;p&gt;把那个验证文件下载到你博客的 source 文件夹里面。&lt;/p&gt;
&lt;p&gt;然后&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;bash&#34;&gt;sudo hexo clean &amp;amp;&amp;amp; sudo hexo g &amp;amp;&amp;amp; sudo hexo d
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;点击完成验证即可。&lt;/p&gt;
&lt;h2 id=&#34;3-将内容推送至百度&#34;&gt;&lt;a href=&#34;#3-将内容推送至百度&#34; class=&#34;headerlink&#34; title=&#34;3.将内容推送至百度&#34;&gt;&lt;/a&gt;3.将内容推送至百度&lt;/h2&gt;&lt;h3 id=&#34;一-手动提交baidusitemap-xml&#34;&gt;&lt;a href=&#34;#一-手动提交baidusitemap-xml&#34; class=&#34;headerlink&#34; title=&#34;一.手动提交baidusitemap.xml&#34;&gt;&lt;/a&gt;一.&lt;a href=&#34;https://ziyuan.baidu.com/linksubmit/index&#34;&gt;手动提交baidusitemap.xml&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;&lt;img loading=&#34;lazy&#34; data-src=&#34;https://pic.imgdb.cn/item/64966d361ddac507cc1a845b.webp&#34;&gt;&lt;/p&gt;
&lt;p&gt;点击sitemap&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; data-src=&#34;https://pic.imgdb.cn/item/64966d691ddac507cc1adc96.webp&#34;&gt;&lt;/p&gt;
&lt;p&gt;填入http:&amp;#x2F;&amp;#x2F;你的网址&amp;#x2F;baidusitemap.xml 提交即可&lt;/p&gt;
&lt;h3 id=&#34;二-”抓取诊断”，手动-百度抓取&#34;&gt;&lt;a href=&#34;#二-”抓取诊断”，手动-百度抓取&#34; class=&#34;headerlink&#34; title=&#34;二.”抓取诊断”，手动-百度抓取&#34;&gt;&lt;/a&gt;二.”抓取诊断”，手动-百度抓取&lt;/h3&gt;&lt;h3 id=&#34;三-Robots-→-检测并更新&#34;&gt;&lt;a href=&#34;#三-Robots-→-检测并更新&#34; class=&#34;headerlink&#34; title=&#34;三.Robots → 检测并更新&#34;&gt;&lt;/a&gt;三.Robots → 检测并更新&lt;/h3&gt;&lt;p&gt;&lt;img loading=&#34;lazy&#34; data-src=&#34;https://pic.imgdb.cn/item/64966d581ddac507cc1ac360.webp&#34;&gt;&lt;/p&gt;
&lt;p&gt;robots配置&lt;/p&gt;
&lt;p&gt;在你博客(hexo)根目录下的 source 文件夹中新建一个robots文件，填入一下内容。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;User-agent: *
Allow: /
Allow: /archives/
Allow: /categories/
Allow: /tags/
Allow: /about/
Allow: /photos

Disallow: /vendors/
Disallow: /js/
Disallow: /css/
Disallow: /fonts/
Disallow: /vendors/
Disallow: /fancybox/
Sitemap: https://你的网址/sitemap.xml
Sitemap: https://你的网址/baidusitemap.xml
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;最后&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;bash&#34;&gt;sudo hexo clean &amp;amp;&amp;amp; sudo hexo g &amp;amp;&amp;amp; sudo hexo d
&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id=&#34;结语&#34;&gt;&lt;a href=&#34;#结语&#34; class=&#34;headerlink&#34; title=&#34;结语&#34;&gt;&lt;/a&gt;结语&lt;/h1&gt;&lt;p&gt;这样下来你的Hexo博客就基本成型了，预祝你的博客越办越好！&lt;/p&gt;
&lt;p&gt;ps.坐在电脑前一个上午，屁股好痛…&lt;/p&gt;
</content>
        <category term="technology" scheme="http://misakait.best/categories/technology/" />
        <category term="Ayer" scheme="http://misakait.best/tags/Ayer/" />
        <category term="hexo" scheme="http://misakait.best/tags/hexo/" />
        <category term="live2d" scheme="http://misakait.best/tags/live2d/" />
        <category term="seo" scheme="http://misakait.best/tags/seo/" />
        <updated>2023-06-23T13:45:35.000Z</updated>
    </entry>
    <entry>
        <id>http://misakait.best/2023/06/23/%E6%8A%98%E8%85%BE%E4%B8%80%E4%B8%8B%E8%A7%A3%E6%9E%90%E5%9F%9F%E5%90%8D/</id>
        <title>折腾一下解析域名</title>
        <link rel="alternate" href="http://misakait.best/2023/06/23/%E6%8A%98%E8%85%BE%E4%B8%80%E4%B8%8B%E8%A7%A3%E6%9E%90%E5%9F%9F%E5%90%8D/"/>
        <content type="html">&lt;h1 id=&#34;前言&#34;&gt;&lt;a href=&#34;#前言&#34; class=&#34;headerlink&#34; title=&#34;前言&#34;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;今天折腾完Hexo和Ayer主题，把网站托管到GitHub之后就开始忙活着搞域名了。&lt;/p&gt;
&lt;p&gt;之前也不是没搞过，可能是由于白嫖的原因，问题不断，屡屡失败，就是没解析上。而今天秉着花钱买服务的想法，遂花2.22美金，买下了这个域名&lt;code&gt;misakait.online&lt;/code&gt;的一年使用期。最后它也没辜负我的期望，成功解析上了。&lt;/p&gt;
&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;

&lt;h1 id=&#34;正式教程&#34;&gt;&lt;a href=&#34;#正式教程&#34; class=&#34;headerlink&#34; title=&#34;正式教程&#34;&gt;&lt;/a&gt;正式教程&lt;/h1&gt;&lt;h2 id=&#34;购买域名&#34;&gt;&lt;a href=&#34;#购买域名&#34; class=&#34;headerlink&#34; title=&#34;购买域名&#34;&gt;&lt;/a&gt;购买域名&lt;/h2&gt;&lt;p&gt;我是在&lt;a href=&#34;%5Bwww.name.com%5D(http://www.name.com)&#34;&gt;Name&lt;/a&gt;这里买的域名，购买过程就不啰嗦了，就是注意买的时候会有个人信息要填，国家要选China,币种人民币即可。要不没有支付宝选项。&lt;/p&gt;
&lt;h2 id=&#34;解析域名&#34;&gt;&lt;a href=&#34;#解析域名&#34; class=&#34;headerlink&#34; title=&#34;解析域名&#34;&gt;&lt;/a&gt;解析域名&lt;/h2&gt;&lt;p&gt;&lt;img loading=&#34;lazy&#34; data-src=&#34;https://pic.imgdb.cn/item/64958a961ddac507ccfa7a1f.webp&#34;&gt;&lt;/p&gt;
&lt;p&gt;这样子填就可以了，其中主机类型A的填@，answer这样填：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;text&#34;&gt;185.199.108.153
185.199.109.153
185.199.110.153
185.199.111.153
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;至于CNAME类型的主机填www，answer填你原本GitHub Page的域名即可。&lt;/p&gt;
&lt;p&gt;至此域名提供商的事就结束了。&lt;/p&gt;
&lt;h2 id=&#34;Github-Page设置&#34;&gt;&lt;a href=&#34;#Github-Page设置&#34; class=&#34;headerlink&#34; title=&#34;Github-Page设置&#34;&gt;&lt;/a&gt;Github-Page设置&lt;/h2&gt;&lt;p&gt;进入你Hexo托管的仓库，点击Setting&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; data-src=&#34;https://pic.imgdb.cn/item/64958ce31ddac507ccfeec62.webp&#34;&gt;&lt;/p&gt;
&lt;p&gt;接着找到page&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; data-src=&#34;https://pic.imgdb.cn/item/64958d571ddac507ccffbfa6.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;找到Custom domain，并在红框内填上你在域名提供商中买到的域名。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; data-src=&#34;https://pic.imgdb.cn/item/64958d791ddac507cc00018a.webp&#34;&gt;&lt;/p&gt;
&lt;p&gt;类似如此，最后点击save。即可大功告成！&lt;/p&gt;
&lt;p&gt;最后等待大约30分钟左右就可以通过新域名访问你的博客了。（最长可以等到48小时之后才可以）&lt;/p&gt;
&lt;h2 id=&#34;紧急问题修复&#34;&gt;&lt;a href=&#34;#紧急问题修复&#34; class=&#34;headerlink&#34; title=&#34;紧急问题修复&#34;&gt;&lt;/a&gt;紧急问题修复&lt;/h2&gt;&lt;p&gt;我兴冲冲&lt;code&gt;hexo d -g&lt;/code&gt;之后进入我的新域名浏览时，却发现了十分恐怖的现象&lt;/p&gt;
&lt;p&gt;404！！！&lt;/p&gt;
&lt;p&gt;最后发现原来还要在你的博客目录下的source文件夹下新建一个CNAME文件。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd source
touch CNAME
vim CNAME
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;里面只要写上你的新域名就行了。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; data-src=&#34;https://pic.imgdb.cn/item/649593a31ddac507cc0ab2ab.webp&#34;&gt;&lt;/p&gt;
&lt;p&gt;类似这样。&lt;/p&gt;
&lt;p&gt;接着重复&lt;strong&gt;Github-Page设置&lt;/strong&gt;中的内容。&lt;/p&gt;
&lt;p&gt;最后重新hexo重新生成并上传&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;bash&#34;&gt;hexo clean &amp;amp;&amp;amp;  hexo g &amp;amp;&amp;amp; hexo d
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;即可。&lt;/p&gt;
</content>
        <category term="technology" scheme="http://misakait.best/categories/technology/" />
        <category term="hexo" scheme="http://misakait.best/tags/hexo/" />
        <category term="domain" scheme="http://misakait.best/tags/domain/" />
        <updated>2023-06-23T11:52:38.000Z</updated>
    </entry>
    <entry>
        <id>http://misakait.best/2023/06/23/%E8%AE%B0%E6%A0%91%E8%8E%93%E6%B4%BE%E4%B8%8AHexo%E7%9A%84%E6%90%AD%E5%BB%BA/</id>
        <title>记树莓派上Hexo的搭建</title>
        <link rel="alternate" href="http://misakait.best/2023/06/23/%E8%AE%B0%E6%A0%91%E8%8E%93%E6%B4%BE%E4%B8%8AHexo%E7%9A%84%E6%90%AD%E5%BB%BA/"/>
        <content type="html">&lt;h1 id=&#34;前言&#34;&gt;&lt;a href=&#34;#前言&#34; class=&#34;headerlink&#34; title=&#34;前言&#34;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;   首先感谢你能来访问我的 Blog，这是我搭建的第一个博客网站，使用的是 Github Pages + Hexo 的形式搭建。从小白一路走了过来也挺不容易的 hhh，我奋战一天一夜，从一开始的Aurora失败最后转投Hexo，可谓经历良多。现在把它记录下来，将来也许会是一种怀念。&lt;/p&gt;
&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;

&lt;!-- more --&gt;

&lt;h1 id=&#34;准备工作&#34;&gt;&lt;a href=&#34;#准备工作&#34; class=&#34;headerlink&#34; title=&#34;准备工作&#34;&gt;&lt;/a&gt;准备工作&lt;/h1&gt;&lt;h2 id=&#34;安装nodejs及npm&#34;&gt;&lt;a href=&#34;#安装nodejs及npm&#34; class=&#34;headerlink&#34; title=&#34;安装nodejs及npm&#34;&gt;&lt;/a&gt;安装nodejs及npm&lt;/h2&gt;&lt;h3 id=&#34;1-寻找nodejs链接&#34;&gt;&lt;a href=&#34;#1-寻找nodejs链接&#34; class=&#34;headerlink&#34; title=&#34;1. 寻找nodejs链接&#34;&gt;&lt;/a&gt;1. 寻找nodejs链接&lt;/h3&gt;&lt;p&gt;进入&lt;a href=&#34;https://nodejs.org/&#34;&gt;Node.js官网&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; data-src=&#34;https://pic.imgdb.cn/item/649538dd1ddac507cc615530.webp&#34;&gt;&lt;/p&gt;
&lt;p&gt;点击&lt;code&gt;OtherDownloads&lt;/code&gt;进入&lt;a href=&#34;https://nodejs.org/en/download/&#34;&gt;下载页面&lt;/a&gt;我们可以看到在&lt;code&gt;Linux Binaries (ARM)&lt;/code&gt;下有着armv8即aarch64的包。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; data-src=&#34;https://pic.imgdb.cn/item/649539d81ddac507cc635f23.webp&#34;&gt;&lt;/p&gt;
&lt;p&gt;树莓派上wget下载即可。&lt;/p&gt;
&lt;h3 id=&#34;2-解压二进制包&#34;&gt;&lt;a href=&#34;#2-解压二进制包&#34; class=&#34;headerlink&#34; title=&#34;2.解压二进制包&#34;&gt;&lt;/a&gt;2.解压二进制包&lt;/h3&gt;&lt;p&gt;在树莓派终端输入如下命令解压：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;bash&#34;&gt;xz -d ~.tar.xz
tar -xavf ~.tar
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;先将系统内原本存在的&lt;code&gt;/usr/bin.node&lt;/code&gt;删除，在终端输入：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;bash&#34;&gt;sudo rm -rf /usr/bin/node
#如果不存在，忽略此步骤
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;解压后，将二进制包移动到&lt;code&gt;/usr/local/node&lt;/code&gt;下，在终端输入：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;bash&#34;&gt;sudo mv ./~ /usr/local/node
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;4-建立软连接&#34;&gt;&lt;a href=&#34;#4-建立软连接&#34; class=&#34;headerlink&#34; title=&#34;4.建立软连接&#34;&gt;&lt;/a&gt;4.建立软连接&lt;/h3&gt;&lt;p&gt;然后为&lt;code&gt;node&lt;/code&gt;和&lt;code&gt;npm&lt;/code&gt;建立软连接，在终端输入：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;bash&#34;&gt;sudo ln -s /usr/local/node/bin/node /usr/bin/node
sudo ln -s /usr/local/node/bin/npm /usr/bin/npm
#这类似于Windows中的快捷方式
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;我们通过查看&lt;code&gt;node&lt;/code&gt;和&lt;code&gt;npm&lt;/code&gt;版本的方式来查看是否成功，在终端输入：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;bash&#34;&gt;node -v &amp;amp;&amp;amp; npm -v
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;可以看到对应的版本号说明&lt;strong&gt;安装成功&lt;/strong&gt;，如下图（不同支持版或版本号不同）：&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; data-src=&#34;https://pic.imgdb.cn/item/64953b1f1ddac507cc65fb4d.webp&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;GitHub创建个人仓库&#34;&gt;&lt;a href=&#34;#GitHub创建个人仓库&#34; class=&#34;headerlink&#34; title=&#34;GitHub创建个人仓库&#34;&gt;&lt;/a&gt;GitHub创建个人仓库&lt;/h2&gt;&lt;p&gt;登录到GitHub,如果没有GitHub帐号，使用你的邮箱注册GitHub帐号：&lt;a href=&#34;https://github.com/&#34;&gt;Build software better, together&lt;/a&gt; 点击GitHub中的New repository创建新仓库，仓库名应该为：&lt;strong&gt;用户名&lt;/strong&gt;.github.io这个&lt;strong&gt;用户名&lt;/strong&gt;使用你的GitHub帐号名称代替，这是固定写法，比如我的仓库名为：&lt;img loading=&#34;lazy&#34; data-src=&#34;https://pic.imgdb.cn/item/64953c2b1ddac507cc68229e.webp&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;获取GitHub的taken&#34;&gt;&lt;a href=&#34;#获取GitHub的taken&#34; class=&#34;headerlink&#34; title=&#34;获取GitHub的taken&#34;&gt;&lt;/a&gt;获取GitHub的taken&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;这一部尤为关键！后面要用。&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;1-登录github，点击设置&#34;&gt;&lt;a href=&#34;#1-登录github，点击设置&#34; class=&#34;headerlink&#34; title=&#34;1.登录github，点击设置&#34;&gt;&lt;/a&gt;1.登录github，点击设置&lt;/h3&gt;&lt;p&gt;&lt;img loading=&#34;lazy&#34; data-src=&#34;https://pic3.zhimg.com/80/v2-257b6563b9a331de7ba82fd959ac3096_720w.webp&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;2-在左侧菜单点击开发者设置&#34;&gt;&lt;a href=&#34;#2-在左侧菜单点击开发者设置&#34; class=&#34;headerlink&#34; title=&#34;2.在左侧菜单点击开发者设置&#34;&gt;&lt;/a&gt;2.在左侧菜单点击开发者设置&lt;/h3&gt;&lt;p&gt;&lt;img loading=&#34;lazy&#34; data-src=&#34;https://pic1.zhimg.com/80/v2-1d93cc0bd336d0c8fbe46e741be7d358_720w.webp&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;3-生成新的令牌&#34;&gt;&lt;a href=&#34;#3-生成新的令牌&#34; class=&#34;headerlink&#34; title=&#34;3.生成新的令牌&#34;&gt;&lt;/a&gt;3.生成新的令牌&lt;/h3&gt;&lt;p&gt;&lt;img loading=&#34;lazy&#34; data-src=&#34;https://pic.imgdb.cn/item/649547931ddac507cc7ee595.webp&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;4-点击创建完成创建&#34;&gt;&lt;a href=&#34;#4-点击创建完成创建&#34; class=&#34;headerlink&#34; title=&#34;4.点击创建完成创建&#34;&gt;&lt;/a&gt;4.点击创建完成创建&lt;/h3&gt;&lt;p&gt;切记，&lt;strong&gt;务必复制一下这个token，并且保存在某个文件里，否则之后只能编辑权限，找不到token值了，只能重新创建&lt;/strong&gt;。同时注意保护这个taken，这个taken的权利极其大！小心不要让它泄露了。&lt;/p&gt;
&lt;h2 id=&#34;部署Git&#34;&gt;&lt;a href=&#34;#部署Git&#34; class=&#34;headerlink&#34; title=&#34;部署Git&#34;&gt;&lt;/a&gt;部署Git&lt;/h2&gt;&lt;p&gt;在树莓派终端输入以安装Git：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;bash&#34;&gt;sudo apt-get install git
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;配置Git信息&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;bash&#34;&gt;git config --global user.name &amp;quot;你的GitHub用户名&amp;quot;
git config --global user.email &amp;quot;你的GitHub注册邮箱&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;然后查看是否已经全局修改用户名：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;bash&#34;&gt;git config --list
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;配置完成后如下图：&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; data-src=&#34;https://pic.imgdb.cn/item/64953fa81ddac507cc6f5567.webp&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;Hexo的安装&#34;&gt;&lt;a href=&#34;#Hexo的安装&#34; class=&#34;headerlink&#34; title=&#34;Hexo的安装&#34;&gt;&lt;/a&gt;Hexo的安装&lt;/h2&gt;&lt;p&gt;新建一个文件夹并在此安装Hexo&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;bash&#34;&gt;mkdir blog
cd blog
sudo npm install hexo-cli -g
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;查看是否安装成功&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;bash&#34;&gt;sudo hexo -v
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; data-src=&#34;https://pic.imgdb.cn/item/64953e111ddac507cc6c2861.webp&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;正式起航&#34;&gt;&lt;a href=&#34;#正式起航&#34; class=&#34;headerlink&#34; title=&#34;正式起航&#34;&gt;&lt;/a&gt;正式起航&lt;/h1&gt;&lt;h2 id=&#34;Hexo-初始化配置&#34;&gt;&lt;a href=&#34;#Hexo-初始化配置&#34; class=&#34;headerlink&#34; title=&#34;Hexo 初始化配置&#34;&gt;&lt;/a&gt;Hexo 初始化配置&lt;/h2&gt;&lt;p&gt;第一个命令，为&lt;code&gt;hexo&lt;/code&gt;建立软连接&lt;/p&gt;
&lt;p&gt;第二个命令，初始化Hexo&lt;/p&gt;
&lt;p&gt;第三个命令表示安装 hexo 部署到 git page 的 deployer，否则后面执行&lt;code&gt;hexo d&lt;/code&gt;‘时会出错。&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;bash&#34;&gt;sudo ln -s /home/lib/node_modules/hexo-cli/bin/hexo /usr/bin/hexo
sudo hexo init
sudo npm install hexo-deployer-git --save
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;本地查看效果&#34;&gt;&lt;a href=&#34;#本地查看效果&#34; class=&#34;headerlink&#34; title=&#34;本地查看效果&#34;&gt;&lt;/a&gt;本地查看效果&lt;/h3&gt;&lt;p&gt;执行以下命令&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;bash&#34;&gt;sudo hexo g
sudo hexo s
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;执行完即可浏览器进入 &lt;a href=&#34;http://localhost:4000/&#34;&gt;http://localhost:4000/&lt;/a&gt; 查看效果&lt;/p&gt;
&lt;p&gt;显示如下说明操作成功：  &lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; data-src=&#34;https://pic.imgdb.cn/item/649541571ddac507cc72b406.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;确认完后回到ssh按Ctrl+C退出。&lt;/p&gt;
&lt;h2 id=&#34;将博客部署到Github-Pages-上&#34;&gt;&lt;a href=&#34;#将博客部署到Github-Pages-上&#34; class=&#34;headerlink&#34; title=&#34;将博客部署到Github Pages 上&#34;&gt;&lt;/a&gt;将博客部署到Github Pages 上&lt;/h2&gt;&lt;p&gt;  到目前为止，我们的本地博客就成功搭建了，但是现在我们只能通过本地连接查看博客，我们要做的是让其他人也能够访问我们的博客，这就需要我们将博客部署到 Github Pages 上。&lt;/p&gt;
&lt;p&gt;我们需要配置博客根目录下的&lt;code&gt;_config.yml&lt;/code&gt;文件，在终端输入：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;bash&#34;&gt;sudo vim _config.yml
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;进入&lt;code&gt;_config.yml&lt;/code&gt;后到文件末端，如下图 将此处修改为&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;text&#34;&gt;# Deployment
## Docs: https://hexo.io/docs/deployment.html
deploy:
  type: git
  repo: https://github.com/你的账户名/你的账户名.github.io.git
  branch: master
  #注意这里的冒号后要加空格
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;类似这样：&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; data-src=&#34;https://pic.imgdb.cn/item/649542bb1ddac507cc75ab3b.webp&#34;&gt;&lt;/p&gt;
&lt;p&gt;在 blog 文件夹下分别执行以下命令&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo hexo clean &amp;amp;&amp;amp; sudo hexo g &amp;amp;&amp;amp; sudo hexo d
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;期间要输入用户名和密码（taken）,用户名输入你的GitHub用户名即可，但是密码不是你的GitHub密码，而是taken！至于taken，一步步按上文走的你应该有了。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; data-src=&#34;https://pic.imgdb.cn/item/649544241ddac507cc78855b.webp&#34;&gt;&lt;/p&gt;
&lt;p&gt;至此，你的博客已经上传至GitHub了！&lt;/p&gt;
&lt;h2 id=&#34;访问博客&#34;&gt;&lt;a href=&#34;#访问博客&#34; class=&#34;headerlink&#34; title=&#34;访问博客&#34;&gt;&lt;/a&gt;访问博客&lt;/h2&gt;&lt;p&gt;你的博客地址：https:&amp;#x2F;&amp;#x2F;你的用户名.github.io， 比如我的是：&lt;a href=&#34;https://misakajialin.github.io/&#34;&gt;https://misakajialin.github.io&lt;/a&gt; ，现在每个人都可以通过此链接访问你的博客了!（感动）&lt;/p&gt;
&lt;h1 id=&#34;后言&#34;&gt;&lt;a href=&#34;#后言&#34; class=&#34;headerlink&#34; title=&#34;后言&#34;&gt;&lt;/a&gt;后言&lt;/h1&gt;&lt;p&gt;至于接下来内容，就期待我的第二篇博客吧！&lt;/p&gt;
</content>
        <category term="technology" scheme="http://misakait.best/categories/technology/" />
        <category term="hexo" scheme="http://misakait.best/tags/hexo/" />
        <category term="RaspberryPi" scheme="http://misakait.best/tags/RaspberryPi/" />
        <updated>2023-06-23T05:53:13.000Z</updated>
    </entry>
</feed>
