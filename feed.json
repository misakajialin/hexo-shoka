{
    "version": "https://jsonfeed.org/version/1",
    "title": "命に嫌われている",
    "subtitle": "chinitei",
    "icon": "http://misakait.best/assets/favicon.ico",
    "description": "唯我超电磁炮永存",
    "home_page_url": "http://misakait.best",
    "items": [
        {
            "id": "http://misakait.best/2024/06/24/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8lux%E4%B8%8B%E8%BD%BDB%E7%AB%99%E8%A7%86%E9%A2%91/",
            "url": "http://misakait.best/2024/06/24/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8lux%E4%B8%8B%E8%BD%BDB%E7%AB%99%E8%A7%86%E9%A2%91/",
            "title": "如何使用lux下载B站视频",
            "date_published": "2024-06-24T06:33:49.384Z",
            "content_html": "<h1 id=\"如何使用lux下载B站视频\"><a href=\"#如何使用lux下载B站视频\" class=\"headerlink\" title=\"如何使用lux下载B站视频\"></a>如何使用lux下载B站视频</h1><h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>鉴于现在bilibili视频下载越来越难，要么要下载一个巨大杂七杂八的软件，要么就是收费，至于小而美的插件脚本都很难寻找，于是我在此推广一个开源项目lux，并介绍如何用它来实现哔哩哔哩视频的下载</p>\n<p><code>more</code></p>\n<h2 id=\"1-下载lux和FFmpeg\"><a href=\"#1-下载lux和FFmpeg\" class=\"headerlink\" title=\"1. 下载lux和FFmpeg\"></a>1. 下载lux和FFmpeg</h2><p>访问此处<a href=\"https://github.com/iawia002/lux/releases/tag/v0.24.1\">Release v0.24.1 · iawia002&#x2F;lux (github.com)</a></p>\n<p>选择适合你操作系统的版本，一般我们用的是windows系统，选择红框内的下载</p>\n<p><img loading=\"lazy\" data-src=\"https://pic.imgdb.cn/item/667980aed9c307b7e99c445a.jpg\"></p>\n<p>解压出来后放在一个单独目录。</p>\n<p>接着访问<a href=\"https://www.gyan.dev/ffmpeg/builds/\">Builds - CODEX FFMPEG @ gyan.dev</a></p>\n<p><img loading=\"lazy\" data-src=\"https://pic.imgdb.cn/item/667980ced9c307b7e99cad18.jpg\"></p>\n<p>下载红框内文件，解压时发现里面有三文件夹，只需解压bin内的文件即可。</p>\n<p>解压完后将bin内的三个文件移动到你上文下载的lux同个目录下。</p>\n<p>接着再在该目录写新建一个txt文件，命名为 <code>cookie.txt</code>备用</p>\n<p>此时你应该有一个文件夹如下</p>\n<p><img loading=\"lazy\" data-src=\"https://pic.imgdb.cn/item/667980e9d9c307b7e99d0c6c.jpg\"></p>\n<h2 id=\"2-获取cookie\"><a href=\"#2-获取cookie\" class=\"headerlink\" title=\"2.获取cookie\"></a>2.获取cookie</h2><p>进入哔哩哔哩首页，按下F12唤出控制台，选择<strong>网络</strong>或者<strong>network</strong>，然后选中<strong>全部</strong>。</p>\n<p><img loading=\"lazy\" data-src=\"https://pic.imgdb.cn/item/66798104d9c307b7e99d55ff.jpg\"></p>\n<p>此时按下F5刷新网页</p>\n<p><img loading=\"lazy\" data-src=\"https://pic.imgdb.cn/item/66798117d9c307b7e99d9489.jpg\"></p>\n<p>等待一会儿，加载完全后不出意料排在第一位的是形如红圈内的玩意 （spm_id_from&#x3D;333.976.0.0），如果不是拉下去寻找该玩意，如若找不到，多刷新几次。</p>\n<p>然后将光标移到右边往下拉，</p>\n<p><img loading=\"lazy\" data-src=\"https://pic.imgdb.cn/item/6679812cd9c307b7e99ddaad.jpg\"></p>\n<p>不出意外你会看到一大段cookie，将cookie所包含的内容全部复制下来，不要遗漏，也不要多。（后面如果出无法登录什么的问题应该就是这里出错了）并将这些内容即你的cookie复制到前文让你新建的那个 <code>[cookie.txt](#jump)</code>的文件里。</p>\n<h2 id=\"3-下载视频\"><a href=\"#3-下载视频\" class=\"headerlink\" title=\"3.下载视频\"></a>3.下载视频</h2><p>在你lux的目录唤出cmd</p>\n<p><img loading=\"lazy\" data-src=\"https://pic.imgdb.cn/item/66798162d9c307b7e99e9448.jpg\">清空红框内容并输入 <code>cmd</code>回车</p>\n<p><img loading=\"lazy\" data-src=\"https://pic.imgdb.cn/item/66797457d9c307b7e976cb6a.jpg\"></p>\n<p>然后就可以开始使用lux了</p>\n<p>比如说想下载红框内视频</p>\n<p><img loading=\"lazy\" data-src=\"https://pic.imgdb.cn/item/6679759bd9c307b7e97a5242.jpg\"></p>\n<p>点进去</p>\n<p><img loading=\"lazy\" data-src=\"https://pic.imgdb.cn/item/667976cad9c307b7e97d99b5.jpg\"></p>\n<p>复制红框内容</p>\n<p>返回cmd</p>\n<hr>\n<ul>\n<li>知识点1</li>\n</ul>\n<p><code>lux -i 视频网址</code> 这个命令可以查看关于此视频的下载信息</p>\n<hr>\n<p>输入</p>\n<pre><code>lux -c cookie.txt -i https://www.bilibili.com/video/BV1Cw4m1e7L2/?spm_id_from=333.1007.tianma.1-1-1.click\n</code></pre>\n<p><img loading=\"lazy\" data-src=\"https://pic.imgdb.cn/item/66797861d9c307b7e98224e9.jpg\"></p>\n<p>你可以看到任何该视频你可以下载的清晰度</p>\n<p>可能你会看到每个清晰度有两种编码方式，avc1和hev1，如何选择看个人需求，我推荐avc1</p>\n<hr>\n<ul>\n<li>知识点二</li>\n</ul>\n<pre><code class=\"cmd\">lux -c cookie.txt\n</code></pre>\n<p>这里的-c cooki.txt很重要，没有它，你只能下载至多480p的视频</p>\n<hr>\n<p>在这里，假如我们要下载高清1080p avc1的，那我们按红框里的来</p>\n<p>cmd内输入</p>\n<pre><code>lux -c cookie.txt -f 80-7 https://www.bilibili.com/video/BV1Cw4m1e7L2/?spm_id_from=333.1007.tianma.1-1-1.click\n</code></pre>\n<p>然后就下完了</p>\n<p>或者你想下载480p hev1的</p>\n<pre><code>lux -c cookie.txt -f 32-12 https://www.bilibili.com/video/BV1Cw4m1e7L2/?spm_id_from=333.1007.tianma.1-1-1.click\n</code></pre>\n<p>注意 <mark>-f</mark> 后面的值</p>\n<p>下载完成后的视频在lux同目录下。</p>\n<p>你可能想问如果我想下载一个合集的内容怎么办，我的回答是自己去看[文档](<a href=\"https://github.com/iawia002/lux\">iawia002&#x2F;lux: 👾 Fast and simple video download library and CLI tool written in Go (github.com)</a>)。其实是我现在没空写，以后会补上的。</p>\n<p><img loading=\"lazy\" data-src=\"https://pic.imgdb.cn/item/66797ee7d9c307b7e9966a78.png\"></p>\n<h2 id=\"后记\"><a href=\"#后记\" class=\"headerlink\" title=\"后记\"></a>后记</h2><p>lux的功能远不及此，它还可以下载更多网站的视频以及拥有更多强大的功能，但只有你多看文档才能够学到。</p>\n<p>最后呢我展望一下未来，我知道lux的命令行模式很容易劝退小白，所以我决定在暑假期间争取学习java以便在开学前制作出lux的图形用户界面，项目名称我已经想好了，就叫lux-GUI。拭目以待吧！</p>\n",
            "tags": []
        },
        {
            "id": "http://misakait.best/2023/06/24/%E5%85%B3%E4%BA%8EHexo%E7%9A%84%E5%9B%BE%E7%89%87%E6%8F%92%E5%85%A5%E9%97%AE%E9%A2%98/",
            "url": "http://misakait.best/2023/06/24/%E5%85%B3%E4%BA%8EHexo%E7%9A%84%E5%9B%BE%E7%89%87%E6%8F%92%E5%85%A5%E9%97%AE%E9%A2%98/",
            "title": "关于Hexo的图片插入问题",
            "date_published": "2023-06-24T03:40:27.000Z",
            "content_html": "<h1 id=\"本地图片引用了却无法显示\"><a href=\"#本地图片引用了却无法显示\" class=\"headerlink\" title=\"本地图片引用了却无法显示\"></a>本地图片引用了却无法显示</h1><blockquote>\n<p>插入图片的两种方法：</p>\n</blockquote>\n<ol>\n<li>引用图床</li>\n<li>引用本地图片。为了防止路径出错，建议使用图床。</li>\n</ol>\n<span id=\"more\"></span>\n\n<h2 id=\"1-图床\"><a href=\"#1-图床\" class=\"headerlink\" title=\"1.图床\"></a>1.图床</h2><p>推荐使用：<a href=\"https://www.superbed.cn/\">聚合图床</a></p>\n<h2 id=\"2-本地图片\"><a href=\"#2-本地图片\" class=\"headerlink\" title=\"2.本地图片\"></a>2.本地图片</h2><p>参照 <a href=\"https://hexo.io/zh-cn/docs/asset-folders\">Hexo 文档</a>，然后用这种方式引用图片：</p>\n<pre><code>&#123;% asset_img image.jpg [title] %&#125;\n</code></pre>\n<p>如果还是无法显示，请尝试在文章里用 html 的 img 标签来引用本地图片。</p>\n",
            "tags": [
                "technology",
                "hexo"
            ]
        },
        {
            "id": "http://misakait.best/2023/06/23/Hexo%E7%9A%84%E7%BE%8E%E5%8C%96%E5%92%8C%E4%BC%98%E5%8C%96--Ayer%E4%B8%BB%E9%A2%98%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8ESEO%E4%BC%98%E5%8C%96/",
            "url": "http://misakait.best/2023/06/23/Hexo%E7%9A%84%E7%BE%8E%E5%8C%96%E5%92%8C%E4%BC%98%E5%8C%96--Ayer%E4%B8%BB%E9%A2%98%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8ESEO%E4%BC%98%E5%8C%96/",
            "title": "Hexo的美化和优化--Ayer主题的安装与SEO优化",
            "date_published": "2023-06-23T13:45:35.000Z",
            "content_html": "<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>正想要写这篇博客时。打开朋友圈一看，又是狗粮又是现充在这端午三天横行。反观自己，这三天就全坐在电脑旁折腾树莓派和博客了。不说了题外话了，回归正题。本篇博文力图包含Ayer主题的安装，live2d看板娘的安装，SEO的优化。</p>\n<span id=\"more\"></span>\n\n<h1 id=\"部署Ayer主题\"><a href=\"#部署Ayer主题\" class=\"headerlink\" title=\"部署Ayer主题\"></a>部署Ayer主题</h1><h2 id=\"1-安装\"><a href=\"#1-安装\" class=\"headerlink\" title=\"1.安装\"></a>1.安装</h2><p><strong>方法一( 推荐）：</strong></p>\n<p>在你的博客（Hexo）目录下执行以下命令：</p>\n<p>如若没有安装cnpm则以下所有cnpm命令全部改为npm即可，或者参考我的这篇博文<a href=\"https://misakait.online/20230623/%E8%AE%B0%E6%A0%91%E8%8E%93%E6%B4%BE%E4%B8%8AHexo%E7%9A%84%E6%90%AD%E5%BB%BA/\">记树莓派上Hexo的搭建 | Misakait’s Blog</a> 来安装cnpm。</p>\n<pre><code class=\"bash\">cnpm i hexo-theme-ayer -S\n</code></pre>\n<ul>\n<li>如果是新安装本主题，安装完成后会在根目录生成一个<code>_config.ayer.yml</code>文件，如若没有新建一个<code>_config.ayer.yml文件。直接编辑</code>_conig.ayer.yml&#96;文件进行配置即可。</li>\n</ul>\n<p><strong>方法二（hexo &lt; 5.0）：</strong></p>\n<pre><code class=\"bash\"># 国内用户如果速度较慢，可以把github地址替换为：https://gitee.com/mirrors/ayer.git\ngit clone https://github.com/Shen-Yu/hexo-theme-ayer.git themes/ayer\n</code></pre>\n<h2 id=\"2-配置\"><a href=\"#2-配置\" class=\"headerlink\" title=\"2.配置\"></a>2.配置</h2><p>将博客根目录下的 <code>_config.yml</code> 里的 <code>theme</code> 值修改成 <code>ayer</code></p>\n<pre><code>theme: ayer\n</code></pre>\n<p>进入_config.ayer.yml文件配置，如果你一开始没有改文件，而是自己新建的，将下文复制过去。</p>\n<pre><code># 侧边栏菜单\nmenu:\n  主页: /\n  归档: /archives\n  分类: /categories\n  标签: /tags\n  关于我: /about\n\n# 站点次标题和打字动效\n# https://github.com/mattboldt/typed.js\nsubtitle:\n  enable: true # 是否开启动效\n  text: 唯我超电磁炮永存 # 显示的文字\n  text2: 樱花落下的速度是没秒五厘米 # 滚动播放，如果不需要可以留空\n  text3: 在此宣誓对你的爱 # 最多支持三段文字\n  startDelay: 0 # 延迟时间\n  typeSpeed: 200 # 打字速度\n  loop: true # 是否循环\n  backSpeed: 100 # 回退速度\n  showCursor: true # 是否显示光标\n\n# 网站图标和侧边栏logo\nfavicon: /favicon.ico\nlogo: /images/ayer-side.svg\n\n# 封面配置\n# enable-是否启用封面；path-封面背景图；logo-封面logo\ncover:\n  enable: true\n  path: /images/cover1.jpg # /source/images目录下附送多张精美壁纸，可任意更换\n  logo: /images/ayer.svg # 如果不要直接设置成false\n\n# 页面顶部进度条\nprogressBar: true\n\n# 告示板模块\nbroadcast:\n  enable: true # true开启，false关闭\n  type: 2 # 1：自定义输入，2：一言api(https://hitokoto.cn/)\n  text: 一个安静优雅的hexo主题，快速且响应式。 # type为1时有效\n\n# 文章配置\n# 文章太长，截断按钮文字(在需要截断的行增加此标记：&lt;!--more--&gt;)\nexcerpt_link: 阅读更多...\n# 如果你嫌每篇文章手动加more标记比较麻烦，又不想在首页全文显示，可以把excerpt_all设置成true，这样首页只会显示文章归档\nexcerpt_all: false\n\n# 是否开启代码复制按钮\ncopy_btn: true\n# 是否开启文章分享按钮\nshare_enable: true\n# 国内的社交平台(If you are not in China, maybe you prefer to set:false)\nshare_china: true\n# 文章分享文字\nshare_text: 分享\n\n# 分页文字\nnav_text:\n  page_prev: 上一页\n  page_next: 下一页\n  post_prev: 上一篇\n  post_next: 下一篇\n\n# 文章页是否显示目录\ntoc: true\n\n# 文章中的图片是否支持点击放大\nimage_viewer: true\n\n# https://github.com/willin/hexo-wordcount\n# 是否开启字数统计(关闭请设置enable为false)\n# 也可以单独在md文件里Front-matter设置`no_word_count: true`属性，来自定义关闭字数统计\nword_count:\n  enable: true\n  # 只在文章详情显示(不在首页显示)\n  only_article_visit: true\n\n# 打赏\n# 打赏type设定：0-关闭打赏； 1-文章对应的md文件里有reward:true属性，才有打赏； 2-默认开启所有文章均有打赏，如果有些文章你不需要，请在文章对应的md文件里设置no_reward:true\nreward_type: 0\n# 打赏wording\n#reward_wording: &quot;请我喝杯咖啡吧~&quot;\n# 支付宝二维码图片地址，跟你设置logo的方式一样。比如：/images/alipay.jpg\n#alipay: /images/alipay.jpg\n# 微信二维码图片地址\n#weixin: /images/wechat.jpg\n\n# 版权声明\n# 版权声明type设定：0-关闭版权声明； 1-文章对应的md文件里有copyright: true属性，才有版权声明； 2-所有文章均有版权声明\ncopyright_type: 2\n\n# 是否启用搜索\nsearch: true\n\n# RSS订阅(先安装hexo-generator-feed插件，再去博客根目录config进行配置)\n# 不想显示可以直接留空\nrss: /atom.xml\n\n# 是否启用黑夜模式开关\ndarkmode: true\n\n# 动态背景效果: 0-关闭，1-动态线条(跟随鼠标)\ncanvas_bg: 1\n\n# 自定义鼠标样式，直接替换/images/mouse.cur文件\nmouse:\n  enable: false\n  path: /images/mouse.cur\n\n# 鼠标点击效果：0-关闭，1-爱心，2-爆炸烟花，3-粒子烟花\nclick_effect: 1\n\n# 页面宽度自定义（不建议修改，可能造成布局混乱），article_width文章宽度，sidebar_width侧边栏宽度\nlayout:\n  article_width: 80rem\n  sidebar_width: 8rem\n\n# GitHub Ribbons-封面右上角的forkme，换样式直接在source/images目录下替换forkme图片\ngithub:\n  # (关闭请设置为false)\n  enable: false\n  url: https://github.com/Shen-Yu/hexo-theme-ayer\n\n# 网易云音乐插件\nmusic:\n  enable: false\n  # 播放器尺寸类型(1：小尺寸、2：大尺寸)\n  type: 1\n  id: 496869422 # 网易云分享的音乐ID(更换音乐请更改此配置项)\n  autoPlay: true # 是否开启自动播放\n\n# 访问量统计(不蒜子)\nbusuanzi:\n  enable: true\n\n# 友盟cnzz统计(url填js代码src链接)\ncnzz:\n  enable: true\n  url: #\n\n# Google Analytics\ngoogle_analytics: &quot;&quot;\n# 百度统计\nbaidu_analytics: &quot;&quot;\n\n# Mathjax数学公式\nmathjax: true\n\n# Katex数学公式(allpost设置为false时只有头部设置math:true的文章才开启)\n# 需要更换hexo渲染器，npm un hexo-renderer-marked -S &amp;&amp; npm i hexo-renderer-markdown-it-katex -S\nkatex:\n  enable: false # true\n  allpost: true\n  copy_tex: false\n\n# mermaid流程图 三个选项缺一不可(https://mermaid-js.github.io/mermaid/#/)\nmermaid:\n  enable: false\n  cdn: https://cdn.jsdelivr.net/npm/mermaid@8.9.2/dist/mermaid.min.js\n  theme: forest\n\n# 网站成立年份(默认为 2023，若填入年份小于当前年份，则显示为 2018-2023 类似的格式)\nsince: 2023\n\n# ICP备案信息尾部显示\nicp:\n  enable: false\n  url: &quot;http://www.beian.miit.gov.cn/&quot; # 备案链接\n  text: &quot;浙ICP备88888888&quot; # 备案信息\n# 公安备案信息尾部显示\ngongan:\n  enable: true\n  img: /images/beian.png #公安备案图片\n  url: &quot;http://www.beian.gov.cn/portal/registerSystemInfo?recordcode=01234567890123&quot; #公安备案链接\n  text: &quot;浙公网安备01234567890123号&quot; #公安备案信息\n\n# 友情链接\nfriends_link:\n  Ayer主题: #网站名称\n    #网站地址\n    url: https://github.com/Shen-Yu/hexo-theme-ayer\n    #网站图片(可忽略不写)\n    img: /images/ayer.png\n  GitHub:\n    url: https://github.com/Shen-Yu\n    img: https://i.loli.net/2020/09/07/indb4PRYDA98EkN.png\n  码云:\n    url: https://gitee.com/shen-yu\n    img: https://i.loli.net/2020/09/07/K3AqO7h6krQFlRX.png\n  Hexo官网:\n    url: https://hexo.io\n    img: https://i.loli.net/2020/09/07/UYGzjo7h68CRWny.png\n  Hexo图表插件:\n    url: https://github.com/Shen-Yu/hexo-tag-chart\n    img: https://i.loli.net/2020/09/07/GIXBYE5SoylhR1r.png\n\n# 评论：1、Valine(推荐)；2、Gitalk；3、Twikoo; 4.MiniValine\n\n# 1、Valine[一款快速、简洁且高效的无后端评论系统](https://github.com/xCss/Valine)\n# 启用Valine必须先创建leancloud应用， 获取 id|key 填入即可\nleancloud:\n  enable: true\n  app_id: #\n  app_key: #\n# Valine配置\nvaline:\n  enable: true # 是否启用\n  avatar: monsterid # 头像样式(https://valine.js.org/avatar.html)\n  placeholder: 给我的文章加点评论吧~ # placeholder\n\n# 2、Gitalk(https://github.com/gitalk/gitalk)\ngitalk:\n  enable: false # true\n  clientID: # GitHub Application Client ID\n  clientSecret: # Client Secret\n  repo: # Repository name\n  owner: # GitHub ID\n  admin: # GitHub ID\n\n# 3、Twikoo(https://github.com/imaegoo/twikoo)\ntwikoo:\n  enable: false\n  envId: #\n\n# 4、MiniValine\n# See: https://github.com/MiniValine/MiniValine\nminivaline:\n  enable: false\n  serverURL: https://minivaline.your-domain.com\n\n# 首页广告配置\n# 可以根据需要自行增加ad_3，ad_4...，留空则不显示\nads:\n# ad_1:\n#    title: vultr优惠vps\n#    img: https://cdn.jsdelivr.net/gh/Shen-Yu/cdn/img/vultr.png\n#    url: https://www.vultr.com/?ref=8630075\n#    width: \n\n\n# 网站开启加密访问，密码可设置任何字符\nlock:\n  enable: false\n  password: 123456\n</code></pre>\n<h2 id=\"3-关于插件\"><a href=\"#3-关于插件\" class=\"headerlink\" title=\"3.关于插件\"></a>3.关于插件</h2><ul>\n<li><a href=\"https://github.com/theme-next/hexo-generator-searchdb\">hexo-generator-searchdb</a> 用于搜索（必需）</li>\n</ul>\n<pre><code class=\"bash\">sudo cnpm install hexo-generator-searchdb --save\n</code></pre>\n<p>然后将以下配置复制到你博客根目录下的 <code>_config.yml</code> 里（注意不是 ayer 目录下的）:</p>\n<pre><code>search:\n path: search.xml\n field: post\n format: html\n</code></pre>\n<ul>\n<li><a href=\"https://github.com/hexojs/hexo-generator-feed\">hexo-generator-feed</a> 用于生成 RSS 订阅（必需）</li>\n</ul>\n<pre><code class=\"bash\">sudo cnpm install hexo-generator-feed --save\n</code></pre>\n<p>然后同样将以下配置复制到你博客根目录下的 <code>_config.yml</code> 里（注意不是 ayer 目录下的）:</p>\n<pre><code class=\"text\">feed:\n  type: atom\n  path: atom.xml\n  limit: 20\n  hub:\n  content:\n  content_limit: 140\n  content_limit_delim: &quot; &quot;\n  order_by: -date\n</code></pre>\n<ul>\n<li><a href=\"https://github.com/EYHN/hexo-helper-live2d/blob/master/README.zh-CN.md\">hexo-helper-live2d</a> 看板娘（可选）</li>\n</ul>\n<pre><code class=\"bash\">sudo cnpm install --save hexo-helper-live2d\n</code></pre>\n<p>下载模型</p>\n<p>有以下这些模型。</p>\n<pre><code class=\"css\">live2d-widget-model-chitose\nlive2d-widget-model-epsilon2_1\nlive2d-widget-model-gf\nlive2d-widget-model-haru/01 (use npm install --save live2d-widget-model-haru)\nlive2d-widget-model-haru/02 (use npm install --save live2d-widget-model-haru)\nlive2d-widget-model-haruto\nlive2d-widget-model-hibiki\nlive2d-widget-model-hijiki\nlive2d-widget-model-izumi\nlive2d-widget-model-koharu\nlive2d-widget-model-miku\nlive2d-widget-model-ni-j\nlive2d-widget-model-nico\nlive2d-widget-model-nietzsche\nlive2d-widget-model-nipsilon\nlive2d-widget-model-nito\nlive2d-widget-model-shizuku\nlive2d-widget-model-tororo\nlive2d-widget-model-tsumiki\nlive2d-widget-model-unitychan\nlive2d-widget-model-wanko\nlive2d-widget-model-z16\n</code></pre>\n<p>选择好对应的模型，使用 <code>cnpm install 模型的包名</code> 来安装，比如我选择的的是&#96;live2d-widget-model-miku 模型包.</p>\n<p><img loading=\"lazy\" data-src=\"https://pic.imgdb.cn/item/649660611ddac507cc054590.webp\"></p>\n<p>在hexo博客根目录选择<code>cmd</code>命令窗口或者<code>git bash</code> 输入以下代码:</p>\n<pre><code class=\"bash\">#仅为示例，将live2d-widget-model-miku改为你想要的模型包名。\nsudo cnpm install live2d-widget-model-miku\n</code></pre>\n<p>打开个人Hexo博客文件根目录下的 <code>_config.yml</code> 文件，在最后添加一下代码，示例:</p>\n<p>其他你配置你照抄即可，注意 model 中的 use 要改成你所安装的模型包名</p>\n<pre><code># live2d\n# https://github.com/EYHN/hexo-helper-live2d\nlive2d:\n  enable: true # 是否启用看板娘\n  scriptFrom: local # 默认\n  pluginRootPath: live2dw/ # 插件在站点上的根目录(相对路径)，自动生成\n  pluginJsPath: lib/ # 脚本文件相对与插件根目录路径\n  pluginModelPath: assets/ # 模型文件相对与插件根目录路径\n  # scriptFrom: jsdelivr    # jsdelivr CDN\n  # scriptFrom: unpkg    # unpkg CDN\n  # scriptFrom: https://cdn.jsdelivr.net/npm/live2d-widget@3.x/lib/L2Dwidget.min.js    # 你的自定义 url\n  tagMode: false # 标签模式, 是否仅替换 live2d tag标签而非插入到所有页面中，具体见项目github描述\n  debug: false # 调试, 是否在控制台输出日志\n  model:\n    use: live2d-widget-model-miku # live2d模型的名字，要改的地方\n    scale: 1\n    hHeadPos: 0.5\n    vHeadPos: 0.618\n  display:\n    superSample: 2\n    width: 200\n    height: 400\n    position: right # 左侧还是右侧\n    hOffset: 20\n    vOffset: 0 # 距底部距离\n  mobile:\n    show: false # 手机端是否可见\n    scale: 0.5\n  react:\n    opacityDefault: 0.7\n    opacityOnHover: 0.2\n</code></pre>\n<h2 id=\"配置页面\"><a href=\"#配置页面\" class=\"headerlink\" title=\"配置页面\"></a>配置页面</h2><ul>\n<li><strong>分类</strong></li>\n</ul>\n<pre><code>sudo hexo new page categories\n</code></pre>\n<p>然后将以下复制到 &#x2F;source&#x2F;categories&#x2F;index.md 文件</p>\n<pre><code>---\ntitle: categories\ntype: &quot;categories&quot;\nlayout: &quot;categories&quot;\n---\n</code></pre>\n<ul>\n<li>标签</li>\n</ul>\n<pre><code class=\"bash\">sudo hexo new page tags\n</code></pre>\n<p>然后将以下复制到 &#x2F;source&#x2F;categories&#x2F;index.md 文件</p>\n<pre><code>---\ntitle: tags\ntype: &quot;tags&quot;\nlayout: &quot;tags&quot;\n---\n</code></pre>\n<ul>\n<li>友情链接</li>\n</ul>\n<pre><code>sudo hexo new page friends\n</code></pre>\n<p>然后将以下复制到 &#x2F;source&#x2F;friends&#x2F;index.md 文件</p>\n<pre><code>---\ntitle: friends\ntype: friends\nlayout: &quot;friends&quot;\n---\n</code></pre>\n<p>然后在根目录下的 <code>_config.ayer.yml</code> 中自定义 <code>friends_link</code> 配置项即可</p>\n<ul>\n<li>相册</li>\n</ul>\n<pre><code>sudo exo new page photos\n</code></pre>\n<p>然后将以下复制到 &#x2F;source&#x2F;photos&#x2F;index.md 文件，<code>img_url</code> 替换成图片路径，<code>caption</code> 替换成图片名称</p>\n<pre><code>---\ntitle: Gallery\n\nalbums: [[&quot;img_url&quot;, &quot;img_caption&quot;], [&quot;img_url&quot;, &quot;img_caption&quot;]]\n---\n</code></pre>\n<h1 id=\"SEO优化\"><a href=\"#SEO优化\" class=\"headerlink\" title=\"SEO优化\"></a>SEO优化</h1><p>我们辛辛苦苦写了博客是为了什么，但不管是为了什么，都有一个让更多人看见的过程。（那些写完就自己一个人看的除外）所以我们需要seo优化，让各大搜索引擎收录我们的网站。</p>\n<h3 id=\"1-生成-sitemap-文件\"><a href=\"#1-生成-sitemap-文件\" class=\"headerlink\" title=\"1. 生成 sitemap 文件\"></a>1. 生成 sitemap 文件</h3><p>需要先安装 hexo 插件：</p>\n<pre><code>     sudo cnpm install hexo-generator-baidu-sitemap --save\n</code></pre>\n<p>打开配置文件博客根目录下的<code>_config.yml</code>添加</p>\n<pre><code>baidusitemap:\n    path: baidusitemap.xml\n</code></pre>\n<p>再重启 hexo</p>\n<pre><code>sudo hexo clean &amp;&amp; sudo hexo g &amp;&amp; sudo hexo d\n</code></pre>\n<h3 id=\"2-网站推送至百度\"><a href=\"#2-网站推送至百度\" class=\"headerlink\" title=\"2.网站推送至百度\"></a>2.网站推送至百度</h3><p>百度 → <a href=\"https://ziyuan.baidu.com/site/siteadd?siteurl=\">添加个人网站</a></p>\n<p>使用添加文件的方式</p>\n<p>输入你的网址</p>\n<p><img loading=\"lazy\" data-src=\"https://pic.imgdb.cn/item/64966b321ddac507cc16c7f3.webp\"></p>\n<p>按你的情况选</p>\n<p><img loading=\"lazy\" data-src=\"https://pic.imgdb.cn/item/64966b481ddac507cc16ecba.webp\"></p>\n<p>选择文件验证</p>\n<p><img loading=\"lazy\" data-src=\"https://pic.imgdb.cn/item/64966b571ddac507cc170728.webp\"></p>\n<p>把那个验证文件下载到你博客的 source 文件夹里面。</p>\n<p>然后</p>\n<pre><code class=\"bash\">sudo hexo clean &amp;&amp; sudo hexo g &amp;&amp; sudo hexo d\n</code></pre>\n<p>点击完成验证即可。</p>\n<h2 id=\"3-将内容推送至百度\"><a href=\"#3-将内容推送至百度\" class=\"headerlink\" title=\"3.将内容推送至百度\"></a>3.将内容推送至百度</h2><h3 id=\"一-手动提交baidusitemap-xml\"><a href=\"#一-手动提交baidusitemap-xml\" class=\"headerlink\" title=\"一.手动提交baidusitemap.xml\"></a>一.<a href=\"https://ziyuan.baidu.com/linksubmit/index\">手动提交baidusitemap.xml</a></h3><p><img loading=\"lazy\" data-src=\"https://pic.imgdb.cn/item/64966d361ddac507cc1a845b.webp\"></p>\n<p>点击sitemap</p>\n<p><img loading=\"lazy\" data-src=\"https://pic.imgdb.cn/item/64966d691ddac507cc1adc96.webp\"></p>\n<p>填入http:&#x2F;&#x2F;你的网址&#x2F;baidusitemap.xml 提交即可</p>\n<h3 id=\"二-”抓取诊断”，手动-百度抓取\"><a href=\"#二-”抓取诊断”，手动-百度抓取\" class=\"headerlink\" title=\"二.”抓取诊断”，手动-百度抓取\"></a>二.”抓取诊断”，手动-百度抓取</h3><h3 id=\"三-Robots-→-检测并更新\"><a href=\"#三-Robots-→-检测并更新\" class=\"headerlink\" title=\"三.Robots → 检测并更新\"></a>三.Robots → 检测并更新</h3><p><img loading=\"lazy\" data-src=\"https://pic.imgdb.cn/item/64966d581ddac507cc1ac360.webp\"></p>\n<p>robots配置</p>\n<p>在你博客(hexo)根目录下的 source 文件夹中新建一个robots文件，填入一下内容。</p>\n<pre><code>User-agent: *\nAllow: /\nAllow: /archives/\nAllow: /categories/\nAllow: /tags/\nAllow: /about/\nAllow: /photos\n\nDisallow: /vendors/\nDisallow: /js/\nDisallow: /css/\nDisallow: /fonts/\nDisallow: /vendors/\nDisallow: /fancybox/\nSitemap: https://你的网址/sitemap.xml\nSitemap: https://你的网址/baidusitemap.xml\n</code></pre>\n<p>最后</p>\n<pre><code class=\"bash\">sudo hexo clean &amp;&amp; sudo hexo g &amp;&amp; sudo hexo d\n</code></pre>\n<h1 id=\"结语\"><a href=\"#结语\" class=\"headerlink\" title=\"结语\"></a>结语</h1><p>这样下来你的Hexo博客就基本成型了，预祝你的博客越办越好！</p>\n<p>ps.坐在电脑前一个上午，屁股好痛…</p>\n",
            "tags": [
                "technology",
                "Ayer",
                "hexo",
                "live2d",
                "seo"
            ]
        },
        {
            "id": "http://misakait.best/2023/06/23/%E6%8A%98%E8%85%BE%E4%B8%80%E4%B8%8B%E8%A7%A3%E6%9E%90%E5%9F%9F%E5%90%8D/",
            "url": "http://misakait.best/2023/06/23/%E6%8A%98%E8%85%BE%E4%B8%80%E4%B8%8B%E8%A7%A3%E6%9E%90%E5%9F%9F%E5%90%8D/",
            "title": "折腾一下解析域名",
            "date_published": "2023-06-23T11:52:38.000Z",
            "content_html": "<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>今天折腾完Hexo和Ayer主题，把网站托管到GitHub之后就开始忙活着搞域名了。</p>\n<p>之前也不是没搞过，可能是由于白嫖的原因，问题不断，屡屡失败，就是没解析上。而今天秉着花钱买服务的想法，遂花2.22美金，买下了这个域名<code>misakait.online</code>的一年使用期。最后它也没辜负我的期望，成功解析上了。</p>\n<span id=\"more\"></span>\n\n<h1 id=\"正式教程\"><a href=\"#正式教程\" class=\"headerlink\" title=\"正式教程\"></a>正式教程</h1><h2 id=\"购买域名\"><a href=\"#购买域名\" class=\"headerlink\" title=\"购买域名\"></a>购买域名</h2><p>我是在<a href=\"%5Bwww.name.com%5D(http://www.name.com)\">Name</a>这里买的域名，购买过程就不啰嗦了，就是注意买的时候会有个人信息要填，国家要选China,币种人民币即可。要不没有支付宝选项。</p>\n<h2 id=\"解析域名\"><a href=\"#解析域名\" class=\"headerlink\" title=\"解析域名\"></a>解析域名</h2><p><img loading=\"lazy\" data-src=\"https://pic.imgdb.cn/item/64958a961ddac507ccfa7a1f.webp\"></p>\n<p>这样子填就可以了，其中主机类型A的填@，answer这样填：</p>\n<pre><code class=\"text\">185.199.108.153\n185.199.109.153\n185.199.110.153\n185.199.111.153\n</code></pre>\n<p>至于CNAME类型的主机填www，answer填你原本GitHub Page的域名即可。</p>\n<p>至此域名提供商的事就结束了。</p>\n<h2 id=\"Github-Page设置\"><a href=\"#Github-Page设置\" class=\"headerlink\" title=\"Github-Page设置\"></a>Github-Page设置</h2><p>进入你Hexo托管的仓库，点击Setting</p>\n<p><img loading=\"lazy\" data-src=\"https://pic.imgdb.cn/item/64958ce31ddac507ccfeec62.webp\"></p>\n<p>接着找到page</p>\n<p><img loading=\"lazy\" data-src=\"https://pic.imgdb.cn/item/64958d571ddac507ccffbfa6.jpg\"></p>\n<p>找到Custom domain，并在红框内填上你在域名提供商中买到的域名。</p>\n<p><img loading=\"lazy\" data-src=\"https://pic.imgdb.cn/item/64958d791ddac507cc00018a.webp\"></p>\n<p>类似如此，最后点击save。即可大功告成！</p>\n<p>最后等待大约30分钟左右就可以通过新域名访问你的博客了。（最长可以等到48小时之后才可以）</p>\n<h2 id=\"紧急问题修复\"><a href=\"#紧急问题修复\" class=\"headerlink\" title=\"紧急问题修复\"></a>紧急问题修复</h2><p>我兴冲冲<code>hexo d -g</code>之后进入我的新域名浏览时，却发现了十分恐怖的现象</p>\n<p>404！！！</p>\n<p>最后发现原来还要在你的博客目录下的source文件夹下新建一个CNAME文件。</p>\n<pre><code>cd source\ntouch CNAME\nvim CNAME\n</code></pre>\n<p>里面只要写上你的新域名就行了。</p>\n<p><img loading=\"lazy\" data-src=\"https://pic.imgdb.cn/item/649593a31ddac507cc0ab2ab.webp\"></p>\n<p>类似这样。</p>\n<p>接着重复<strong>Github-Page设置</strong>中的内容。</p>\n<p>最后重新hexo重新生成并上传</p>\n<pre><code class=\"bash\">hexo clean &amp;&amp;  hexo g &amp;&amp; hexo d\n</code></pre>\n<p>即可。</p>\n",
            "tags": [
                "technology",
                "hexo",
                "domain"
            ]
        },
        {
            "id": "http://misakait.best/2023/06/23/%E8%AE%B0%E6%A0%91%E8%8E%93%E6%B4%BE%E4%B8%8AHexo%E7%9A%84%E6%90%AD%E5%BB%BA/",
            "url": "http://misakait.best/2023/06/23/%E8%AE%B0%E6%A0%91%E8%8E%93%E6%B4%BE%E4%B8%8AHexo%E7%9A%84%E6%90%AD%E5%BB%BA/",
            "title": "记树莓派上Hexo的搭建",
            "date_published": "2023-06-23T05:53:13.000Z",
            "content_html": "<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>   首先感谢你能来访问我的 Blog，这是我搭建的第一个博客网站，使用的是 Github Pages + Hexo 的形式搭建。从小白一路走了过来也挺不容易的 hhh，我奋战一天一夜，从一开始的Aurora失败最后转投Hexo，可谓经历良多。现在把它记录下来，将来也许会是一种怀念。</p>\n<span id=\"more\"></span>\n\n<!-- more -->\n\n<h1 id=\"准备工作\"><a href=\"#准备工作\" class=\"headerlink\" title=\"准备工作\"></a>准备工作</h1><h2 id=\"安装nodejs及npm\"><a href=\"#安装nodejs及npm\" class=\"headerlink\" title=\"安装nodejs及npm\"></a>安装nodejs及npm</h2><h3 id=\"1-寻找nodejs链接\"><a href=\"#1-寻找nodejs链接\" class=\"headerlink\" title=\"1. 寻找nodejs链接\"></a>1. 寻找nodejs链接</h3><p>进入<a href=\"https://nodejs.org/\">Node.js官网</a></p>\n<p><img loading=\"lazy\" data-src=\"https://pic.imgdb.cn/item/649538dd1ddac507cc615530.webp\"></p>\n<p>点击<code>OtherDownloads</code>进入<a href=\"https://nodejs.org/en/download/\">下载页面</a>我们可以看到在<code>Linux Binaries (ARM)</code>下有着armv8即aarch64的包。</p>\n<p><img loading=\"lazy\" data-src=\"https://pic.imgdb.cn/item/649539d81ddac507cc635f23.webp\"></p>\n<p>树莓派上wget下载即可。</p>\n<h3 id=\"2-解压二进制包\"><a href=\"#2-解压二进制包\" class=\"headerlink\" title=\"2.解压二进制包\"></a>2.解压二进制包</h3><p>在树莓派终端输入如下命令解压：</p>\n<pre><code class=\"bash\">xz -d ~.tar.xz\ntar -xavf ~.tar\n</code></pre>\n<p>先将系统内原本存在的<code>/usr/bin.node</code>删除，在终端输入：</p>\n<pre><code class=\"bash\">sudo rm -rf /usr/bin/node\n#如果不存在，忽略此步骤\n</code></pre>\n<p>解压后，将二进制包移动到<code>/usr/local/node</code>下，在终端输入：</p>\n<pre><code class=\"bash\">sudo mv ./~ /usr/local/node\n</code></pre>\n<h3 id=\"4-建立软连接\"><a href=\"#4-建立软连接\" class=\"headerlink\" title=\"4.建立软连接\"></a>4.建立软连接</h3><p>然后为<code>node</code>和<code>npm</code>建立软连接，在终端输入：</p>\n<pre><code class=\"bash\">sudo ln -s /usr/local/node/bin/node /usr/bin/node\nsudo ln -s /usr/local/node/bin/npm /usr/bin/npm\n#这类似于Windows中的快捷方式\n</code></pre>\n<p>我们通过查看<code>node</code>和<code>npm</code>版本的方式来查看是否成功，在终端输入：</p>\n<pre><code class=\"bash\">node -v &amp;&amp; npm -v\n</code></pre>\n<p>可以看到对应的版本号说明<strong>安装成功</strong>，如下图（不同支持版或版本号不同）：</p>\n<p><img loading=\"lazy\" data-src=\"https://pic.imgdb.cn/item/64953b1f1ddac507cc65fb4d.webp\"></p>\n<h2 id=\"GitHub创建个人仓库\"><a href=\"#GitHub创建个人仓库\" class=\"headerlink\" title=\"GitHub创建个人仓库\"></a>GitHub创建个人仓库</h2><p>登录到GitHub,如果没有GitHub帐号，使用你的邮箱注册GitHub帐号：<a href=\"https://github.com/\">Build software better, together</a> 点击GitHub中的New repository创建新仓库，仓库名应该为：<strong>用户名</strong>.github.io这个<strong>用户名</strong>使用你的GitHub帐号名称代替，这是固定写法，比如我的仓库名为：<img loading=\"lazy\" data-src=\"https://pic.imgdb.cn/item/64953c2b1ddac507cc68229e.webp\"></p>\n<h2 id=\"获取GitHub的taken\"><a href=\"#获取GitHub的taken\" class=\"headerlink\" title=\"获取GitHub的taken\"></a>获取GitHub的taken</h2><p><strong>这一部尤为关键！后面要用。</strong></p>\n<h3 id=\"1-登录github，点击设置\"><a href=\"#1-登录github，点击设置\" class=\"headerlink\" title=\"1.登录github，点击设置\"></a>1.登录github，点击设置</h3><p><img loading=\"lazy\" data-src=\"https://pic3.zhimg.com/80/v2-257b6563b9a331de7ba82fd959ac3096_720w.webp\"></p>\n<h3 id=\"2-在左侧菜单点击开发者设置\"><a href=\"#2-在左侧菜单点击开发者设置\" class=\"headerlink\" title=\"2.在左侧菜单点击开发者设置\"></a>2.在左侧菜单点击开发者设置</h3><p><img loading=\"lazy\" data-src=\"https://pic1.zhimg.com/80/v2-1d93cc0bd336d0c8fbe46e741be7d358_720w.webp\"></p>\n<h3 id=\"3-生成新的令牌\"><a href=\"#3-生成新的令牌\" class=\"headerlink\" title=\"3.生成新的令牌\"></a>3.生成新的令牌</h3><p><img loading=\"lazy\" data-src=\"https://pic.imgdb.cn/item/649547931ddac507cc7ee595.webp\"></p>\n<h3 id=\"4-点击创建完成创建\"><a href=\"#4-点击创建完成创建\" class=\"headerlink\" title=\"4.点击创建完成创建\"></a>4.点击创建完成创建</h3><p>切记，<strong>务必复制一下这个token，并且保存在某个文件里，否则之后只能编辑权限，找不到token值了，只能重新创建</strong>。同时注意保护这个taken，这个taken的权利极其大！小心不要让它泄露了。</p>\n<h2 id=\"部署Git\"><a href=\"#部署Git\" class=\"headerlink\" title=\"部署Git\"></a>部署Git</h2><p>在树莓派终端输入以安装Git：</p>\n<pre><code class=\"bash\">sudo apt-get install git\n</code></pre>\n<p>配置Git信息</p>\n<pre><code class=\"bash\">git config --global user.name &quot;你的GitHub用户名&quot;\ngit config --global user.email &quot;你的GitHub注册邮箱&quot;\n</code></pre>\n<p>然后查看是否已经全局修改用户名：</p>\n<pre><code class=\"bash\">git config --list\n</code></pre>\n<p>配置完成后如下图：</p>\n<p><img loading=\"lazy\" data-src=\"https://pic.imgdb.cn/item/64953fa81ddac507cc6f5567.webp\"></p>\n<h2 id=\"Hexo的安装\"><a href=\"#Hexo的安装\" class=\"headerlink\" title=\"Hexo的安装\"></a>Hexo的安装</h2><p>新建一个文件夹并在此安装Hexo</p>\n<pre><code class=\"bash\">mkdir blog\ncd blog\nsudo npm install hexo-cli -g\n</code></pre>\n<p>查看是否安装成功</p>\n<pre><code class=\"bash\">sudo hexo -v\n</code></pre>\n<p><img loading=\"lazy\" data-src=\"https://pic.imgdb.cn/item/64953e111ddac507cc6c2861.webp\"></p>\n<h1 id=\"正式起航\"><a href=\"#正式起航\" class=\"headerlink\" title=\"正式起航\"></a>正式起航</h1><h2 id=\"Hexo-初始化配置\"><a href=\"#Hexo-初始化配置\" class=\"headerlink\" title=\"Hexo 初始化配置\"></a>Hexo 初始化配置</h2><p>第一个命令，为<code>hexo</code>建立软连接</p>\n<p>第二个命令，初始化Hexo</p>\n<p>第三个命令表示安装 hexo 部署到 git page 的 deployer，否则后面执行<code>hexo d</code>‘时会出错。</p>\n<pre><code class=\"bash\">sudo ln -s /home/lib/node_modules/hexo-cli/bin/hexo /usr/bin/hexo\nsudo hexo init\nsudo npm install hexo-deployer-git --save\n</code></pre>\n<h3 id=\"本地查看效果\"><a href=\"#本地查看效果\" class=\"headerlink\" title=\"本地查看效果\"></a>本地查看效果</h3><p>执行以下命令</p>\n<pre><code class=\"bash\">sudo hexo g\nsudo hexo s\n</code></pre>\n<p>执行完即可浏览器进入 <a href=\"http://localhost:4000/\">http://localhost:4000/</a> 查看效果</p>\n<p>显示如下说明操作成功：  </p>\n<p><img loading=\"lazy\" data-src=\"https://pic.imgdb.cn/item/649541571ddac507cc72b406.png\"></p>\n<p>确认完后回到ssh按Ctrl+C退出。</p>\n<h2 id=\"将博客部署到Github-Pages-上\"><a href=\"#将博客部署到Github-Pages-上\" class=\"headerlink\" title=\"将博客部署到Github Pages 上\"></a>将博客部署到Github Pages 上</h2><p>  到目前为止，我们的本地博客就成功搭建了，但是现在我们只能通过本地连接查看博客，我们要做的是让其他人也能够访问我们的博客，这就需要我们将博客部署到 Github Pages 上。</p>\n<p>我们需要配置博客根目录下的<code>_config.yml</code>文件，在终端输入：</p>\n<pre><code class=\"bash\">sudo vim _config.yml\n</code></pre>\n<p>进入<code>_config.yml</code>后到文件末端，如下图 将此处修改为</p>\n<pre><code class=\"text\"># Deployment\n## Docs: https://hexo.io/docs/deployment.html\ndeploy:\n  type: git\n  repo: https://github.com/你的账户名/你的账户名.github.io.git\n  branch: master\n  #注意这里的冒号后要加空格\n</code></pre>\n<p>类似这样：</p>\n<p><img loading=\"lazy\" data-src=\"https://pic.imgdb.cn/item/649542bb1ddac507cc75ab3b.webp\"></p>\n<p>在 blog 文件夹下分别执行以下命令</p>\n<pre><code>sudo hexo clean &amp;&amp; sudo hexo g &amp;&amp; sudo hexo d\n</code></pre>\n<p>期间要输入用户名和密码（taken）,用户名输入你的GitHub用户名即可，但是密码不是你的GitHub密码，而是taken！至于taken，一步步按上文走的你应该有了。</p>\n<p><img loading=\"lazy\" data-src=\"https://pic.imgdb.cn/item/649544241ddac507cc78855b.webp\"></p>\n<p>至此，你的博客已经上传至GitHub了！</p>\n<h2 id=\"访问博客\"><a href=\"#访问博客\" class=\"headerlink\" title=\"访问博客\"></a>访问博客</h2><p>你的博客地址：https:&#x2F;&#x2F;你的用户名.github.io， 比如我的是：<a href=\"https://misakajialin.github.io/\">https://misakajialin.github.io</a> ，现在每个人都可以通过此链接访问你的博客了!（感动）</p>\n<h1 id=\"后言\"><a href=\"#后言\" class=\"headerlink\" title=\"后言\"></a>后言</h1><p>至于接下来内容，就期待我的第二篇博客吧！</p>\n",
            "tags": [
                "technology",
                "hexo",
                "RaspberryPi"
            ]
        }
    ]
}